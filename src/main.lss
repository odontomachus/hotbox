
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00000d20  00000db4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d20  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800136  00800136  00000dea  2**0
                  ALLOC
  3 .stab         00003f54  00000000  00000000  00000dec  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000066a  00000000  00000000  00004d40  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000021  00000000  00000000  000053aa  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000028  00000000  00000000  000053cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000813  00000000  00000000  000053f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002bb  00000000  00000000  00005c06  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000192  00000000  00000000  00005ec1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000194  00000000  00000000  00006054  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000274  00000000  00000000  000061e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000562  00000000  00000000  0000645c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000018  00000000  00000000  000069be  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	5a c0       	rjmp	.+180    	; 0xb6 <__ctors_end>
   2:	74 c0       	rjmp	.+232    	; 0xec <__bad_interrupt>
   4:	73 c0       	rjmp	.+230    	; 0xec <__bad_interrupt>
   6:	72 c0       	rjmp	.+228    	; 0xec <__bad_interrupt>
   8:	71 c0       	rjmp	.+226    	; 0xec <__bad_interrupt>
   a:	70 c0       	rjmp	.+224    	; 0xec <__bad_interrupt>
   c:	6f c0       	rjmp	.+222    	; 0xec <__bad_interrupt>
   e:	6e c0       	rjmp	.+220    	; 0xec <__bad_interrupt>
  10:	6d c0       	rjmp	.+218    	; 0xec <__bad_interrupt>
  12:	6c c0       	rjmp	.+216    	; 0xec <__bad_interrupt>
  14:	6b c0       	rjmp	.+214    	; 0xec <__bad_interrupt>
  16:	6a c0       	rjmp	.+212    	; 0xec <__bad_interrupt>
  18:	69 c0       	rjmp	.+210    	; 0xec <__bad_interrupt>
  1a:	68 c0       	rjmp	.+208    	; 0xec <__bad_interrupt>
  1c:	67 c0       	rjmp	.+206    	; 0xec <__bad_interrupt>
  1e:	66 c0       	rjmp	.+204    	; 0xec <__bad_interrupt>
  20:	65 c0       	rjmp	.+202    	; 0xec <__bad_interrupt>
  22:	64 c0       	rjmp	.+200    	; 0xec <__bad_interrupt>
  24:	9b c1       	rjmp	.+822    	; 0x35c <__vector_18>
  26:	62 c0       	rjmp	.+196    	; 0xec <__bad_interrupt>
  28:	61 c0       	rjmp	.+194    	; 0xec <__bad_interrupt>
  2a:	60 c0       	rjmp	.+192    	; 0xec <__bad_interrupt>
  2c:	5f c0       	rjmp	.+190    	; 0xec <__bad_interrupt>
  2e:	5e c0       	rjmp	.+188    	; 0xec <__bad_interrupt>
  30:	5d c0       	rjmp	.+186    	; 0xec <__bad_interrupt>
  32:	5c c0       	rjmp	.+184    	; 0xec <__bad_interrupt>
  34:	08 00       	.word	0x0008	; ????
  36:	00 00       	nop
  38:	be 92       	st	-X, r11
  3a:	24 49       	sbci	r18, 0x94	; 148
  3c:	12 3e       	cpi	r17, 0xE2	; 226
  3e:	ab aa       	std	Y+51, r10	; 0x33
  40:	aa 2a       	or	r10, r26
  42:	be cd       	rjmp	.-1156   	; 0xfffffbc0 <__eeprom_end+0xff7efbc0>
  44:	cc cc       	rjmp	.-1640   	; 0xfffff9de <__eeprom_end+0xff7ef9de>
  46:	4c 3e       	cpi	r20, 0xEC	; 236
  48:	00 00       	nop
  4a:	00 80       	ld	r0, Z
  4c:	be ab       	std	Y+54, r27	; 0x36
  4e:	aa aa       	std	Y+50, r10	; 0x32
  50:	aa 3e       	cpi	r26, 0xEA	; 234
  52:	00 00       	nop
  54:	00 00       	nop
  56:	bf 00       	.word	0x00bf	; ????
  58:	00 00       	nop
  5a:	80 3f       	cpi	r24, 0xF0	; 240
  5c:	00 00       	nop
  5e:	00 00       	nop
  60:	00 08       	sbc	r0, r0
  62:	41 78       	andi	r20, 0x81	; 129
  64:	d3 bb       	out	0x13, r29	; 19
  66:	43 87       	std	Z+11, r20	; 0x0b
  68:	d1 13       	cpse	r29, r17
  6a:	3d 19       	sub	r19, r13
  6c:	0e 3c       	cpi	r16, 0xCE	; 206
  6e:	c3 bd       	out	0x23, r28	; 35
  70:	42 82       	std	Z+2, r4	; 0x02
  72:	ad 2b       	or	r26, r29
  74:	3e 68       	ori	r19, 0x8E	; 142
  76:	ec 82       	std	Y+4, r14	; 0x04
  78:	76 be       	out	0x36, r7	; 54
  7a:	d9 8f       	std	Y+25, r29	; 0x19
  7c:	e1 a9       	ldd	r30, Z+49	; 0x31
  7e:	3e 4c       	sbci	r19, 0xCE	; 206
  80:	80 ef       	ldi	r24, 0xF0	; 240
  82:	ff be       	out	0x3f, r15	; 63
  84:	01 c4       	rjmp	.+2050   	; 0x888 <__fp_splitA+0x22>
  86:	ff 7f       	andi	r31, 0xFF	; 255
  88:	3f 00       	.word	0x003f	; ????
  8a:	00 00       	nop
  8c:	00 00       	nop
  8e:	07 63       	ori	r16, 0x37	; 55
  90:	42 36       	cpi	r20, 0x62	; 98
  92:	b7 9b       	sbis	0x16, 7	; 22
  94:	d8 a7       	std	Y+40, r29	; 0x28
  96:	1a 39       	cpi	r17, 0x9A	; 154
  98:	68 56       	subi	r22, 0x68	; 104
  9a:	18 ae       	std	Y+56, r1	; 0x38
  9c:	ba ab       	std	Y+50, r27	; 0x32
  9e:	55 8c       	ldd	r5, Z+29	; 0x1d
  a0:	1d 3c       	cpi	r17, 0xCD	; 205
  a2:	b7 cc       	rjmp	.-1682   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
  a4:	57 63       	ori	r21, 0x37	; 55
  a6:	bd 6d       	ori	r27, 0xDD	; 221
  a8:	ed fd       	.word	0xfded	; ????
  aa:	75 3e       	cpi	r23, 0xE5	; 229
  ac:	f6 17       	cp	r31, r22
  ae:	72 31       	cpi	r23, 0x12	; 18
  b0:	bf 00       	.word	0x00bf	; ????
  b2:	00 00       	nop
  b4:	80 3f       	cpi	r24, 0xF0	; 240

000000b6 <__ctors_end>:
  b6:	11 24       	eor	r1, r1
  b8:	1f be       	out	0x3f, r1	; 63
  ba:	cf ef       	ldi	r28, 0xFF	; 255
  bc:	d2 e0       	ldi	r29, 0x02	; 2
  be:	de bf       	out	0x3e, r29	; 62
  c0:	cd bf       	out	0x3d, r28	; 61

000000c2 <__do_copy_data>:
  c2:	11 e0       	ldi	r17, 0x01	; 1
  c4:	a0 e0       	ldi	r26, 0x00	; 0
  c6:	b1 e0       	ldi	r27, 0x01	; 1
  c8:	e0 e2       	ldi	r30, 0x20	; 32
  ca:	fd e0       	ldi	r31, 0x0D	; 13
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <__do_copy_data+0x10>
  ce:	05 90       	lpm	r0, Z+
  d0:	0d 92       	st	X+, r0
  d2:	a6 33       	cpi	r26, 0x36	; 54
  d4:	b1 07       	cpc	r27, r17
  d6:	d9 f7       	brne	.-10     	; 0xce <__do_copy_data+0xc>

000000d8 <__do_clear_bss>:
  d8:	11 e0       	ldi	r17, 0x01	; 1
  da:	a6 e3       	ldi	r26, 0x36	; 54
  dc:	b1 e0       	ldi	r27, 0x01	; 1
  de:	01 c0       	rjmp	.+2      	; 0xe2 <.do_clear_bss_start>

000000e0 <.do_clear_bss_loop>:
  e0:	1d 92       	st	X+, r1

000000e2 <.do_clear_bss_start>:
  e2:	a9 33       	cpi	r26, 0x39	; 57
  e4:	b1 07       	cpc	r27, r17
  e6:	e1 f7       	brne	.-8      	; 0xe0 <.do_clear_bss_loop>
  e8:	1a d2       	rcall	.+1076   	; 0x51e <main>
  ea:	18 c6       	rjmp	.+3120   	; 0xd1c <_exit>

000000ec <__bad_interrupt>:
  ec:	89 cf       	rjmp	.-238    	; 0x0 <__vectors>

000000ee <USART_Init>:


void USART_Init()
{
    /* Set baud rate (using u2x=1 doubles effective baud rate) */
  UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
  ee:	10 92 c5 00 	sts	0x00C5, r1
  UBRR0L = (uint8_t)(BAUD_PRESCALLER);
  f2:	85 e0       	ldi	r24, 0x05	; 5
  f4:	80 93 c4 00 	sts	0x00C4, r24
  /* Enable receiver, transmitter and rx complete interrupt */
  UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
  f8:	88 e9       	ldi	r24, 0x98	; 152
  fa:	80 93 c1 00 	sts	0x00C1, r24
  /* Set frame format: 
   * 8 bit data (UCSZ2:0 = 0b011) 
   * 1 stop bit (USBS = 0) 
   * Async. op (UMSEL = 0) 
   * No parity (UPM1:0 = 0b00)*/ 
  UCSR0C = (3<<UCSZ00);
  fe:	86 e0       	ldi	r24, 0x06	; 6
 100:	80 93 c2 00 	sts	0x00C2, r24
 104:	08 95       	ret

00000106 <USART_Transmit>:
 * Send a byte.
 */
void USART_Transmit( unsigned char data )
{
    /* Wait for empty transmit buffer */
    while ( !( UCSR0A & (1<<UDRE0)) )
 106:	90 91 c0 00 	lds	r25, 0x00C0
 10a:	95 ff       	sbrs	r25, 5
 10c:	fc cf       	rjmp	.-8      	; 0x106 <USART_Transmit>
        ;
    /* Put data into buffer, sends the data */
    UDR0 = data;
 10e:	80 93 c6 00 	sts	0x00C6, r24
 112:	08 95       	ret

00000114 <USART_Flush>:
}

void USART_Flush( void )
{
    unsigned char dummy;
    while ( UCSR0A & (1<<RXC0) ) dummy = UDR0;
 114:	80 91 c0 00 	lds	r24, 0x00C0
 118:	87 ff       	sbrs	r24, 7
 11a:	03 c0       	rjmp	.+6      	; 0x122 <USART_Flush+0xe>
 11c:	80 91 c6 00 	lds	r24, 0x00C6
 120:	f9 cf       	rjmp	.-14     	; 0x114 <USART_Flush>
}
 122:	08 95       	ret

00000124 <USART_putstring>:

void USART_putstring(char* StringPtr){
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	ec 01       	movw	r28, r24
    while(*StringPtr != 0x00){
 12a:	89 91       	ld	r24, Y+
 12c:	88 23       	and	r24, r24
 12e:	11 f0       	breq	.+4      	; 0x134 <USART_putstring+0x10>
        USART_Transmit(*StringPtr);
 130:	ea df       	rcall	.-44     	; 0x106 <USART_Transmit>
 132:	fb cf       	rjmp	.-10     	; 0x12a <USART_putstring+0x6>
        StringPtr++;}
 
}
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	08 95       	ret

0000013a <ADC_init>:
#include "sensors.h"

void ADC_init() {
  // Set left adjusted for 8 bit precision
  ADMUX |= (1<<ADLAR);
 13a:	ec e7       	ldi	r30, 0x7C	; 124
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	80 62       	ori	r24, 0x20	; 32
 142:	80 83       	st	Z, r24
  // Enable ADC and set prescaler to 16 ~1MHz/16 = 62kHz ~ 0.5ms for
  // first measurement, 0.25ms per subsequent measurement.
  ADCSRA |= (1<<ADEN) | (0b100<<ADPS0);
 144:	ea e7       	ldi	r30, 0x7A	; 122
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	84 68       	ori	r24, 0x84	; 132
 14c:	80 83       	st	Z, r24
  // Disable digital buffer on 3 ADC pins.
  DIDR0 |= (1<<ADC4D) | (1<<ADC5D) | (1<<ADC2D);
 14e:	ee e7       	ldi	r30, 0x7E	; 126
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	84 63       	ori	r24, 0x34	; 52
 156:	80 83       	st	Z, r24
 158:	08 95       	ret

0000015a <read_ts>:
 */
unsigned int read_ts(char mux) {
  uint8_t tmp;

  // Set source to internal
  ADMUX |= (0b11<<REFS0);
 15a:	90 91 7c 00 	lds	r25, 0x007C
 15e:	90 6c       	ori	r25, 0xC0	; 192
 160:	90 93 7c 00 	sts	0x007C, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 164:	e7 ea       	ldi	r30, 0xA7	; 167
 166:	f1 e6       	ldi	r31, 0x61	; 97
 168:	31 97       	sbiw	r30, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <read_ts+0xe>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <read_ts+0x14>
 16e:	00 00       	nop
  // Give cap time to discharge
  _delay_ms(100);
  DDRC &= ~((1<<PC5)|(1<<PC4));
 170:	97 b1       	in	r25, 0x07	; 7
 172:	9f 7c       	andi	r25, 0xCF	; 207
 174:	97 b9       	out	0x07, r25	; 7
  PORTC &= ~((1<<PC5)|(1<<PC4));
 176:	98 b1       	in	r25, 0x08	; 8
 178:	9f 7c       	andi	r25, 0xCF	; 207
 17a:	98 b9       	out	0x08, r25	; 8
  // Set ADC4/5 as input
  ADMUX = (ADMUX & ( ~(0b1111<<MUX0) )) | (mux<<MUX0);
 17c:	90 91 7c 00 	lds	r25, 0x007C
 180:	90 7f       	andi	r25, 0xF0	; 240
 182:	89 2b       	or	r24, r25
 184:	80 93 7c 00 	sts	0x007C, r24
 188:	89 ef       	ldi	r24, 0xF9	; 249
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <read_ts+0x32>
 190:	00 c0       	rjmp	.+0      	; 0x192 <read_ts+0x38>
 192:	00 00       	nop
  _delay_ms(1);
  // Start conversion
  ADCSRA |= 1 << ADSC;
 194:	80 91 7a 00 	lds	r24, 0x007A
 198:	80 64       	ori	r24, 0x40	; 64
 19a:	80 93 7a 00 	sts	0x007A, r24
  // Wait for conversion to finish
  while (ADCSRA & (1<<ADSC)) {
 19e:	80 91 7a 00 	lds	r24, 0x007A
 1a2:	86 ff       	sbrs	r24, 6
 1a4:	05 c0       	rjmp	.+10     	; 0x1b0 <read_ts+0x56>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a6:	90 e1       	ldi	r25, 0x10	; 16
 1a8:	9a 95       	dec	r25
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <read_ts+0x4e>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <read_ts+0x54>
 1ae:	f7 cf       	rjmp	.-18     	; 0x19e <read_ts+0x44>
    _delay_us(50);
  }
  tmp = ADCH;// Discard first measurement after channel switch
 1b0:	80 91 79 00 	lds	r24, 0x0079

  // Start conversion
  ADCSRA |= 1 << ADSC;
 1b4:	80 91 7a 00 	lds	r24, 0x007A
 1b8:	80 64       	ori	r24, 0x40	; 64
 1ba:	80 93 7a 00 	sts	0x007A, r24
  // Wait for conversion to finish
  while (ADCSRA & (1<<ADSC)) {
 1be:	80 91 7a 00 	lds	r24, 0x007A
 1c2:	86 ff       	sbrs	r24, 6
 1c4:	05 c0       	rjmp	.+10     	; 0x1d0 <read_ts+0x76>
 1c6:	e0 e1       	ldi	r30, 0x10	; 16
 1c8:	ea 95       	dec	r30
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <read_ts+0x6e>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <read_ts+0x74>
 1ce:	f7 cf       	rjmp	.-18     	; 0x1be <read_ts+0x64>
    _delay_us(50);
  }

  return ((ADCL>>6) | (ADCH<<2));
 1d0:	20 91 78 00 	lds	r18, 0x0078
 1d4:	80 91 79 00 	lds	r24, 0x0079
 1d8:	f4 e0       	ldi	r31, 0x04	; 4
 1da:	8f 9f       	mul	r24, r31
 1dc:	c0 01       	movw	r24, r0
 1de:	11 24       	eor	r1, r1
 1e0:	22 95       	swap	r18
 1e2:	26 95       	lsr	r18
 1e4:	26 95       	lsr	r18
 1e6:	23 70       	andi	r18, 0x03	; 3
}
 1e8:	82 2b       	or	r24, r18
 1ea:	08 95       	ret

000001ec <phys_temp>:

/**
 * Get temperature readings.
 */
unsigned int phys_temp(int i) {
 1ec:	8f 92       	push	r8
 1ee:	9f 92       	push	r9
 1f0:	af 92       	push	r10
 1f2:	bf 92       	push	r11
 1f4:	cf 92       	push	r12
 1f6:	df 92       	push	r13
 1f8:	ef 92       	push	r14
 1fa:	ff 92       	push	r15
 1fc:	0f 93       	push	r16
 1fe:	1f 93       	push	r17
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
 204:	00 d0       	rcall	.+0      	; 0x206 <phys_temp+0x1a>
 206:	00 d0       	rcall	.+0      	; 0x208 <phys_temp+0x1c>
 208:	cd b7       	in	r28, 0x3d	; 61
 20a:	de b7       	in	r29, 0x3e	; 62
 20c:	8c 01       	movw	r16, r24
  double d_temp, sensor, log_res;
  // Add 0.1 to make sure it's not 0.
  sensor = (double) read_ts(mux_mask[i])+0.1;
 20e:	fc 01       	movw	r30, r24
 210:	e0 50       	subi	r30, 0x00	; 0
 212:	ff 4f       	sbci	r31, 0xFF	; 255
 214:	80 81       	ld	r24, Z
 216:	a1 df       	rcall	.-190    	; 0x15a <read_ts>
 218:	bc 01       	movw	r22, r24
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	92 d2       	rcall	.+1316   	; 0x744 <__floatunsisf>
 220:	2d ec       	ldi	r18, 0xCD	; 205
 222:	3c ec       	ldi	r19, 0xCC	; 204
 224:	4c ec       	ldi	r20, 0xCC	; 204
 226:	5d e3       	ldi	r21, 0x3D	; 61
 228:	8c d1       	rcall	.+792    	; 0x542 <__addsf3>
 22a:	9b 01       	movw	r18, r22
 22c:	ac 01       	movw	r20, r24

  // Get log of resistance from V measurement.
  log_res = log(sensor) + log_resistors[i] - log(1024-sensor);
 22e:	29 83       	std	Y+1, r18	; 0x01
 230:	3a 83       	std	Y+2, r19	; 0x02
 232:	4b 83       	std	Y+3, r20	; 0x03
 234:	5c 83       	std	Y+4, r21	; 0x04
 236:	41 d3       	rcall	.+1666   	; 0x8ba <log>
 238:	6b 01       	movw	r12, r22
 23a:	7c 01       	movw	r14, r24
 23c:	29 81       	ldd	r18, Y+1	; 0x01
 23e:	3a 81       	ldd	r19, Y+2	; 0x02
 240:	4b 81       	ldd	r20, Y+3	; 0x03
 242:	5c 81       	ldd	r21, Y+4	; 0x04
 244:	60 e0       	ldi	r22, 0x00	; 0
 246:	70 e0       	ldi	r23, 0x00	; 0
 248:	80 e8       	ldi	r24, 0x80	; 128
 24a:	94 e4       	ldi	r25, 0x44	; 68
 24c:	79 d1       	rcall	.+754    	; 0x540 <__subsf3>
 24e:	35 d3       	rcall	.+1642   	; 0x8ba <log>
 250:	4b 01       	movw	r8, r22
 252:	5c 01       	movw	r10, r24
 254:	f8 01       	movw	r30, r16
 256:	ee 0f       	add	r30, r30
 258:	ff 1f       	adc	r31, r31
 25a:	ee 0f       	add	r30, r30
 25c:	ff 1f       	adc	r31, r31
 25e:	ee 5f       	subi	r30, 0xFE	; 254
 260:	fe 4f       	sbci	r31, 0xFE	; 254
 262:	20 81       	ld	r18, Z
 264:	31 81       	ldd	r19, Z+1	; 0x01
 266:	42 81       	ldd	r20, Z+2	; 0x02
 268:	53 81       	ldd	r21, Z+3	; 0x03
 26a:	c7 01       	movw	r24, r14
 26c:	b6 01       	movw	r22, r12
 26e:	69 d1       	rcall	.+722    	; 0x542 <__addsf3>
 270:	a5 01       	movw	r20, r10
 272:	94 01       	movw	r18, r8
 274:	65 d1       	rcall	.+714    	; 0x540 <__subsf3>
 276:	6b 01       	movw	r12, r22
 278:	7c 01       	movw	r14, r24
  d_temp = 1.0/(phys_params[i][0]+phys_params[i][1]*log_res + phys_params[i][2]*pow(log_res,3)) - 273.15;
 27a:	20 e0       	ldi	r18, 0x00	; 0
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	40 e4       	ldi	r20, 0x40	; 64
 280:	50 e4       	ldi	r21, 0x40	; 64
 282:	be d3       	rcall	.+1916   	; 0xa00 <pow>
 284:	4b 01       	movw	r8, r22
 286:	5c 01       	movw	r10, r24
 288:	8c e0       	ldi	r24, 0x0C	; 12
 28a:	80 9f       	mul	r24, r16
 28c:	90 01       	movw	r18, r0
 28e:	81 9f       	mul	r24, r17
 290:	30 0d       	add	r19, r0
 292:	11 24       	eor	r1, r1
 294:	89 01       	movw	r16, r18
 296:	06 5f       	subi	r16, 0xF6	; 246
 298:	1e 4f       	sbci	r17, 0xFE	; 254
 29a:	f8 01       	movw	r30, r16
 29c:	24 81       	ldd	r18, Z+4	; 0x04
 29e:	35 81       	ldd	r19, Z+5	; 0x05
 2a0:	46 81       	ldd	r20, Z+6	; 0x06
 2a2:	57 81       	ldd	r21, Z+7	; 0x07
 2a4:	c7 01       	movw	r24, r14
 2a6:	b6 01       	movw	r22, r12
 2a8:	48 d3       	rcall	.+1680   	; 0x93a <__mulsf3>
 2aa:	f8 01       	movw	r30, r16
 2ac:	20 81       	ld	r18, Z
 2ae:	31 81       	ldd	r19, Z+1	; 0x01
 2b0:	42 81       	ldd	r20, Z+2	; 0x02
 2b2:	53 81       	ldd	r21, Z+3	; 0x03
 2b4:	46 d1       	rcall	.+652    	; 0x542 <__addsf3>
 2b6:	6b 01       	movw	r12, r22
 2b8:	7c 01       	movw	r14, r24
 2ba:	f8 01       	movw	r30, r16
 2bc:	20 85       	ldd	r18, Z+8	; 0x08
 2be:	31 85       	ldd	r19, Z+9	; 0x09
 2c0:	42 85       	ldd	r20, Z+10	; 0x0a
 2c2:	53 85       	ldd	r21, Z+11	; 0x0b
 2c4:	c5 01       	movw	r24, r10
 2c6:	b4 01       	movw	r22, r8
 2c8:	38 d3       	rcall	.+1648   	; 0x93a <__mulsf3>
 2ca:	9b 01       	movw	r18, r22
 2cc:	ac 01       	movw	r20, r24
 2ce:	c7 01       	movw	r24, r14
 2d0:	b6 01       	movw	r22, r12
 2d2:	37 d1       	rcall	.+622    	; 0x542 <__addsf3>
 2d4:	9b 01       	movw	r18, r22
 2d6:	ac 01       	movw	r20, r24
 2d8:	60 e0       	ldi	r22, 0x00	; 0
 2da:	70 e0       	ldi	r23, 0x00	; 0
 2dc:	80 e8       	ldi	r24, 0x80	; 128
 2de:	9f e3       	ldi	r25, 0x3F	; 63
 2e0:	98 d1       	rcall	.+816    	; 0x612 <__divsf3>
 2e2:	23 e3       	ldi	r18, 0x33	; 51
 2e4:	33 e9       	ldi	r19, 0x93	; 147
 2e6:	48 e8       	ldi	r20, 0x88	; 136
 2e8:	53 e4       	ldi	r21, 0x43	; 67
 2ea:	2a d1       	rcall	.+596    	; 0x540 <__subsf3>

  return (int) d_temp;
 2ec:	fa d1       	rcall	.+1012   	; 0x6e2 <__fixsfsi>
}
 2ee:	cb 01       	movw	r24, r22
 2f0:	0f 90       	pop	r0
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	df 91       	pop	r29
 2fa:	cf 91       	pop	r28
 2fc:	1f 91       	pop	r17
 2fe:	0f 91       	pop	r16
 300:	ff 90       	pop	r15
 302:	ef 90       	pop	r14
 304:	df 90       	pop	r13
 306:	cf 90       	pop	r12
 308:	bf 90       	pop	r11
 30a:	af 90       	pop	r10
 30c:	9f 90       	pop	r9
 30e:	8f 90       	pop	r8
 310:	08 95       	ret

00000312 <RTC_init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 312:	2f e3       	ldi	r18, 0x3F	; 63
 314:	8d e0       	ldi	r24, 0x0D	; 13
 316:	93 e0       	ldi	r25, 0x03	; 3
 318:	21 50       	subi	r18, 0x01	; 1
 31a:	80 40       	sbci	r24, 0x00	; 0
 31c:	90 40       	sbci	r25, 0x00	; 0
 31e:	e1 f7       	brne	.-8      	; 0x318 <RTC_init+0x6>
 320:	00 c0       	rjmp	.+0      	; 0x322 <RTC_init+0x10>
 322:	00 00       	nop
void RTC_init(void)
{
  // Oscillator might take as long as one second to stabilize.
  _delay_ms(1000);
  // Disable the Timer/Counter2 interrupts
  TIMSK2 &= ~((1<<OCIE2A)|(1<<OCIE2B)|(1<<TOIE2));
 324:	80 91 70 00 	lds	r24, 0x0070
 328:	88 7f       	andi	r24, 0xF8	; 248
 32a:	80 93 70 00 	sts	0x0070, r24
  // Select clock source by setting AS2 as appropriate.
  ASSR = (1<<AS2);
 32e:	80 e2       	ldi	r24, 0x20	; 32
 330:	80 93 b6 00 	sts	0x00B6, r24
  // Set prescaler to 128: 32.768 kHz / 128 = 1 sec between each overflow
  TCCR2B |= (1<<CS22) | (1<<CS20);            
 334:	80 91 b1 00 	lds	r24, 0x00B1
 338:	85 60       	ori	r24, 0x05	; 5
 33a:	80 93 b1 00 	sts	0x00B1, r24
  // Reset TCNT2
  TCNT2 = 0;
 33e:	10 92 b2 00 	sts	0x00B2, r1
	
  // Wait for clock edge
  while(ASSR & 0x1F);
 342:	80 91 b6 00 	lds	r24, 0x00B6
 346:	8f 71       	andi	r24, 0x1F	; 31
 348:	e1 f7       	brne	.-8      	; 0x342 <RTC_init+0x30>

  // Clear timer interrupt flag registers
  TIFR2 |= ((1<<OCF2A)|(1<<OCF2B)|(1<<TOV2));
 34a:	87 b3       	in	r24, 0x17	; 23
 34c:	87 60       	ori	r24, 0x07	; 7
 34e:	87 bb       	out	0x17, r24	; 23
  // Enable timer overflow interrupt
  TIMSK2 |= (1<<TOIE2);
 350:	80 91 70 00 	lds	r24, 0x0070
 354:	81 60       	ori	r24, 0x01	; 1
 356:	80 93 70 00 	sts	0x0070, r24
 35a:	08 95       	ret

0000035c <__vector_18>:

/*
 * ISR RX complete
 * Receive a byte from serial and act on it.
 */
ISR(USART_RX_vect) {
 35c:	1f 92       	push	r1
 35e:	0f 92       	push	r0
 360:	0f b6       	in	r0, 0x3f	; 63
 362:	0f 92       	push	r0
 364:	11 24       	eor	r1, r1
 366:	8f 93       	push	r24
  uint8_t r = UDR0;
 368:	80 91 c6 00 	lds	r24, 0x00C6
  switch (r) {
 36c:	83 37       	cpi	r24, 0x73	; 115
 36e:	29 f0       	breq	.+10     	; 0x37a <__vector_18+0x1e>
 370:	84 37       	cpi	r24, 0x74	; 116
 372:	31 f4       	brne	.+12     	; 0x380 <__vector_18+0x24>
  case 's':
    start = 1;
    break;
  case 't':
    start = 0;
 374:	10 92 36 01 	sts	0x0136, r1
    break;
 378:	03 c0       	rjmp	.+6      	; 0x380 <__vector_18+0x24>
 */
ISR(USART_RX_vect) {
  uint8_t r = UDR0;
  switch (r) {
  case 's':
    start = 1;
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	80 93 36 01 	sts	0x0136, r24
    break;
  case 't':
    start = 0;
    break;
  }
}
 380:	8f 91       	pop	r24
 382:	0f 90       	pop	r0
 384:	0f be       	out	0x3f, r0	; 63
 386:	0f 90       	pop	r0
 388:	1f 90       	pop	r1
 38a:	18 95       	reti

0000038c <run>:

void run() {
 38c:	4f 92       	push	r4
 38e:	5f 92       	push	r5
 390:	6f 92       	push	r6
 392:	7f 92       	push	r7
 394:	8f 92       	push	r8
 396:	9f 92       	push	r9
 398:	af 92       	push	r10
 39a:	bf 92       	push	r11
 39c:	cf 92       	push	r12
 39e:	df 92       	push	r13
 3a0:	ef 92       	push	r14
 3a2:	ff 92       	push	r15
 3a4:	0f 93       	push	r16
 3a6:	1f 93       	push	r17
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29

  set_temp = 53;
  set_time = 3600*6;
  countdown = set_time;

  part = cycle = 0;
 3ac:	d0 e0       	ldi	r29, 0x00	; 0
 3ae:	c0 e0       	ldi	r28, 0x00	; 0
  unsigned char temp1, temp2, last_temp;
  float dt, dg;

  set_temp = 53;
  set_time = 3600*6;
  countdown = set_time;
 3b0:	80 e6       	ldi	r24, 0x60	; 96
 3b2:	c8 2e       	mov	r12, r24
 3b4:	84 e5       	ldi	r24, 0x54	; 84
 3b6:	d8 2e       	mov	r13, r24
    USART_Transmit(cycle);
    USART_Transmit('S');
    USART_Transmit(PORTD & (1<<PD5));
    USART_putstring(":EOM:");

    if ((cycle%30)==0) {
 3b8:	0e e1       	ldi	r16, 0x1E	; 30
    if (cycle == 0) {
      if (part > 0) {
        PORTD |= (1<<PD5);
      }
    }
    cycle = (cycle + 1)%30;
 3ba:	9e e1       	ldi	r25, 0x1E	; 30
 3bc:	89 2e       	mov	r8, r25
 3be:	91 2c       	mov	r9, r1
  set_temp = 53;
  set_time = 3600*6;
  countdown = set_time;

  part = cycle = 0;
  while (countdown-- > 0) {
 3c0:	21 e0       	ldi	r18, 0x01	; 1
 3c2:	c2 1a       	sub	r12, r18
 3c4:	d1 08       	sbc	r13, r1
 3c6:	08 f4       	brcc	.+2      	; 0x3ca <run+0x3e>
 3c8:	98 c0       	rjmp	.+304    	; 0x4fa <run+0x16e>
    temp1 = phys_temp(0);
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	0e df       	rcall	.-484    	; 0x1ec <phys_temp>
 3d0:	f8 2e       	mov	r15, r24
    temp2 = phys_temp(1);
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0a df       	rcall	.-492    	; 0x1ec <phys_temp>
 3d8:	18 2f       	mov	r17, r24

    USART_putstring("MSG:12:");
 3da:	82 e2       	ldi	r24, 0x22	; 34
 3dc:	91 e0       	ldi	r25, 0x01	; 1
 3de:	a2 de       	rcall	.-700    	; 0x124 <USART_putstring>
    USART_Transmit('T');
 3e0:	84 e5       	ldi	r24, 0x54	; 84
 3e2:	91 de       	rcall	.-734    	; 0x106 <USART_Transmit>
    USART_Transmit(temp1);
 3e4:	8f 2d       	mov	r24, r15
 3e6:	8f de       	rcall	.-738    	; 0x106 <USART_Transmit>
    USART_Transmit(temp2);
 3e8:	81 2f       	mov	r24, r17
 3ea:	8d de       	rcall	.-742    	; 0x106 <USART_Transmit>
    USART_Transmit('C');
 3ec:	83 e4       	ldi	r24, 0x43	; 67
 3ee:	8b de       	rcall	.-746    	; 0x106 <USART_Transmit>
    USART_Transmit(countdown>>8);
 3f0:	8d 2d       	mov	r24, r13
 3f2:	89 de       	rcall	.-750    	; 0x106 <USART_Transmit>
    USART_Transmit(countdown);
 3f4:	8c 2d       	mov	r24, r12
 3f6:	87 de       	rcall	.-754    	; 0x106 <USART_Transmit>
    USART_Transmit('P');
 3f8:	80 e5       	ldi	r24, 0x50	; 80
 3fa:	85 de       	rcall	.-758    	; 0x106 <USART_Transmit>
    USART_Transmit(part);
 3fc:	8d 2f       	mov	r24, r29
 3fe:	83 de       	rcall	.-762    	; 0x106 <USART_Transmit>
    USART_Transmit('Y');
 400:	89 e5       	ldi	r24, 0x59	; 89
 402:	81 de       	rcall	.-766    	; 0x106 <USART_Transmit>
    USART_Transmit(cycle);
 404:	8c 2f       	mov	r24, r28
 406:	7f de       	rcall	.-770    	; 0x106 <USART_Transmit>
    USART_Transmit('S');
 408:	83 e5       	ldi	r24, 0x53	; 83
 40a:	7d de       	rcall	.-774    	; 0x106 <USART_Transmit>
    USART_Transmit(PORTD & (1<<PD5));
 40c:	8b b1       	in	r24, 0x0b	; 11
 40e:	80 72       	andi	r24, 0x20	; 32
 410:	7a de       	rcall	.-780    	; 0x106 <USART_Transmit>
    USART_putstring(":EOM:");
 412:	8a e2       	ldi	r24, 0x2A	; 42
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	86 de       	rcall	.-756    	; 0x124 <USART_putstring>

    if ((cycle%30)==0) {
 418:	8c 2f       	mov	r24, r28
 41a:	60 2f       	mov	r22, r16
 41c:	4c d4       	rcall	.+2200   	; 0xcb6 <__udivmodqi4>
 41e:	91 11       	cpse	r25, r1
 420:	4d c0       	rjmp	.+154    	; 0x4bc <run+0x130>
      temp1 = MAX(temp1, temp2);
 422:	1f 15       	cp	r17, r15
 424:	08 f4       	brcc	.+2      	; 0x428 <run+0x9c>
 426:	1f 2d       	mov	r17, r15
      dt = temp1 - last_temp;
 428:	e1 2e       	mov	r14, r17
 42a:	f1 2c       	mov	r15, r1
 42c:	b1 2c       	mov	r11, r1
      dg = last_temp - temp1;
 42e:	b5 01       	movw	r22, r10
 430:	6e 19       	sub	r22, r14
 432:	7f 09       	sbc	r23, r15
 434:	88 27       	eor	r24, r24
 436:	77 fd       	sbrc	r23, 7
 438:	80 95       	com	r24
 43a:	98 2f       	mov	r25, r24
 43c:	85 d1       	rcall	.+778    	; 0x748 <__floatsisf>
 43e:	2b 01       	movw	r4, r22
 440:	3c 01       	movw	r6, r24
    USART_Transmit(PORTD & (1<<PD5));
    USART_putstring(":EOM:");

    if ((cycle%30)==0) {
      temp1 = MAX(temp1, temp2);
      dt = temp1 - last_temp;
 442:	b7 01       	movw	r22, r14
 444:	6a 19       	sub	r22, r10
 446:	7b 09       	sbc	r23, r11
 448:	88 27       	eor	r24, r24
 44a:	77 fd       	sbrc	r23, 7
 44c:	80 95       	com	r24
 44e:	98 2f       	mov	r25, r24
 450:	7b d1       	rcall	.+758    	; 0x748 <__floatsisf>
 452:	9b 01       	movw	r18, r22
 454:	ac 01       	movw	r20, r24
      dg = last_temp - temp1;
      last_temp = temp1;
      if ((dg - dt) > 0) {
 456:	c3 01       	movw	r24, r6
 458:	b2 01       	movw	r22, r4
 45a:	72 d0       	rcall	.+228    	; 0x540 <__subsf3>
 45c:	2b 01       	movw	r4, r22
 45e:	3c 01       	movw	r6, r24
 460:	20 e0       	ldi	r18, 0x00	; 0
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	a9 01       	movw	r20, r18
 466:	20 d2       	rcall	.+1088   	; 0x8a8 <__gesf2>
 468:	18 16       	cp	r1, r24
 46a:	e4 f4       	brge	.+56     	; 0x4a4 <run+0x118>
        part = part + round((30.0-part)/2.0);
 46c:	6d 2f       	mov	r22, r29
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	69 d1       	rcall	.+722    	; 0x748 <__floatsisf>
 476:	2b 01       	movw	r4, r22
 478:	3c 01       	movw	r6, r24
 47a:	9b 01       	movw	r18, r22
 47c:	ac 01       	movw	r20, r24
 47e:	60 e0       	ldi	r22, 0x00	; 0
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	80 ef       	ldi	r24, 0xF0	; 240
 484:	91 e4       	ldi	r25, 0x41	; 65
 486:	5c d0       	rcall	.+184    	; 0x540 <__subsf3>
 488:	20 e0       	ldi	r18, 0x00	; 0
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	40 e0       	ldi	r20, 0x00	; 0
 48e:	5f e3       	ldi	r21, 0x3F	; 63
 490:	54 d2       	rcall	.+1192   	; 0x93a <__mulsf3>
 492:	02 d3       	rcall	.+1540   	; 0xa98 <round>
 494:	9b 01       	movw	r18, r22
 496:	ac 01       	movw	r20, r24
 498:	c3 01       	movw	r24, r6
 49a:	b2 01       	movw	r22, r4
 49c:	52 d0       	rcall	.+164    	; 0x542 <__addsf3>
 49e:	26 d1       	rcall	.+588    	; 0x6ec <__fixunssfsi>
 4a0:	d6 2f       	mov	r29, r22
 4a2:	0d c0       	rjmp	.+26     	; 0x4be <run+0x132>
      }
      else if ((dg - dt) < 0) {
 4a4:	20 e0       	ldi	r18, 0x00	; 0
 4a6:	30 e0       	ldi	r19, 0x00	; 0
 4a8:	a9 01       	movw	r20, r18
 4aa:	c3 01       	movw	r24, r6
 4ac:	b2 01       	movw	r22, r4
 4ae:	ad d0       	rcall	.+346    	; 0x60a <__cmpsf2>
 4b0:	87 ff       	sbrs	r24, 7
 4b2:	05 c0       	rjmp	.+10     	; 0x4be <run+0x132>
        if (part > 0) {
 4b4:	dd 23       	and	r29, r29
 4b6:	19 f0       	breq	.+6      	; 0x4be <run+0x132>
          part = part / 2;
 4b8:	d6 95       	lsr	r29
 4ba:	01 c0       	rjmp	.+2      	; 0x4be <run+0x132>
 4bc:	1a 2d       	mov	r17, r10
        }
      }
    }

    if (cycle == part) {
 4be:	cd 13       	cpse	r28, r29
 4c0:	01 c0       	rjmp	.+2      	; 0x4c4 <run+0x138>
      PORTD &= ~(1<<PD5);
 4c2:	5d 98       	cbi	0x0b, 5	; 11
    }
    if (cycle == 0) {
 4c4:	c1 11       	cpse	r28, r1
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <run+0x140>
      if (part > 0) {
 4c8:	d1 11       	cpse	r29, r1
        PORTD |= (1<<PD5);
 4ca:	5d 9a       	sbi	0x0b, 5	; 11
      }
    }
    cycle = (cycle + 1)%30;
 4cc:	8c 2f       	mov	r24, r28
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	01 96       	adiw	r24, 0x01	; 1
 4d2:	b4 01       	movw	r22, r8
 4d4:	fc d3       	rcall	.+2040   	; 0xcce <__divmodhi4>
 4d6:	c8 2f       	mov	r28, r24

    temp1 = phys_temp(0);
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	87 de       	rcall	.-754    	; 0x1ec <phys_temp>
    temp2 = phys_temp(1);
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	84 de       	rcall	.-760    	; 0x1ec <phys_temp>
 4e4:	2f e1       	ldi	r18, 0x1F	; 31
 4e6:	8f eb       	ldi	r24, 0xBF	; 191
 4e8:	92 e0       	ldi	r25, 0x02	; 2
 4ea:	21 50       	subi	r18, 0x01	; 1
 4ec:	80 40       	sbci	r24, 0x00	; 0
 4ee:	90 40       	sbci	r25, 0x00	; 0
 4f0:	e1 f7       	brne	.-8      	; 0x4ea <run+0x15e>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <run+0x168>
 4f4:	00 00       	nop
 4f6:	a1 2e       	mov	r10, r17
 4f8:	63 cf       	rjmp	.-314    	; 0x3c0 <run+0x34>

    _delay_ms(900);

  }

  PORTD &= ~(1<<PD5);
 4fa:	5d 98       	cbi	0x0b, 5	; 11
}
 4fc:	df 91       	pop	r29
 4fe:	cf 91       	pop	r28
 500:	1f 91       	pop	r17
 502:	0f 91       	pop	r16
 504:	ff 90       	pop	r15
 506:	ef 90       	pop	r14
 508:	df 90       	pop	r13
 50a:	cf 90       	pop	r12
 50c:	bf 90       	pop	r11
 50e:	af 90       	pop	r10
 510:	9f 90       	pop	r9
 512:	8f 90       	pop	r8
 514:	7f 90       	pop	r7
 516:	6f 90       	pop	r6
 518:	5f 90       	pop	r5
 51a:	4f 90       	pop	r4
 51c:	08 95       	ret

0000051e <main>:


int main () {
  
  // Relay controller 1;
  DDRD |= (1<<PD5);
 51e:	55 9a       	sbi	0x0a, 5	; 10
  // Relay controller 2;
  DDRB |= (1<<PB0);
 520:	20 9a       	sbi	0x04, 0	; 4
  USART_Init();
 522:	e5 dd       	rcall	.-1078   	; 0xee <USART_Init>
  ADC_init();
 524:	0a de       	rcall	.-1004   	; 0x13a <ADC_init>
  USART_putstring("Ready");
 526:	80 e3       	ldi	r24, 0x30	; 48
 528:	91 e0       	ldi	r25, 0x01	; 1
 52a:	fc dd       	rcall	.-1032   	; 0x124 <USART_putstring>
  sei();
 52c:	78 94       	sei
  while (1) {
    if (start) {
 52e:	80 91 36 01 	lds	r24, 0x0136
 532:	88 23       	and	r24, r24
 534:	e1 f3       	breq	.-8      	; 0x52e <main+0x10>
      run();
 536:	2a df       	rcall	.-428    	; 0x38c <run>
      USART_putstring("Ready");
 538:	80 e3       	ldi	r24, 0x30	; 48
 53a:	91 e0       	ldi	r25, 0x01	; 1
 53c:	f3 dd       	rcall	.-1050   	; 0x124 <USART_putstring>
 53e:	f7 cf       	rjmp	.-18     	; 0x52e <main+0x10>

00000540 <__subsf3>:
 540:	50 58       	subi	r21, 0x80	; 128

00000542 <__addsf3>:
 542:	bb 27       	eor	r27, r27
 544:	aa 27       	eor	r26, r26
 546:	0e d0       	rcall	.+28     	; 0x564 <__addsf3x>
 548:	75 c1       	rjmp	.+746    	; 0x834 <__fp_round>
 54a:	66 d1       	rcall	.+716    	; 0x818 <__fp_pscA>
 54c:	30 f0       	brcs	.+12     	; 0x55a <__addsf3+0x18>
 54e:	6b d1       	rcall	.+726    	; 0x826 <__fp_pscB>
 550:	20 f0       	brcs	.+8      	; 0x55a <__addsf3+0x18>
 552:	31 f4       	brne	.+12     	; 0x560 <__addsf3+0x1e>
 554:	9f 3f       	cpi	r25, 0xFF	; 255
 556:	11 f4       	brne	.+4      	; 0x55c <__addsf3+0x1a>
 558:	1e f4       	brtc	.+6      	; 0x560 <__addsf3+0x1e>
 55a:	5b c1       	rjmp	.+694    	; 0x812 <__fp_nan>
 55c:	0e f4       	brtc	.+2      	; 0x560 <__addsf3+0x1e>
 55e:	e0 95       	com	r30
 560:	e7 fb       	bst	r30, 7
 562:	51 c1       	rjmp	.+674    	; 0x806 <__fp_inf>

00000564 <__addsf3x>:
 564:	e9 2f       	mov	r30, r25
 566:	77 d1       	rcall	.+750    	; 0x856 <__fp_split3>
 568:	80 f3       	brcs	.-32     	; 0x54a <__addsf3+0x8>
 56a:	ba 17       	cp	r27, r26
 56c:	62 07       	cpc	r22, r18
 56e:	73 07       	cpc	r23, r19
 570:	84 07       	cpc	r24, r20
 572:	95 07       	cpc	r25, r21
 574:	18 f0       	brcs	.+6      	; 0x57c <__addsf3x+0x18>
 576:	71 f4       	brne	.+28     	; 0x594 <__addsf3x+0x30>
 578:	9e f5       	brtc	.+102    	; 0x5e0 <__addsf3x+0x7c>
 57a:	8f c1       	rjmp	.+798    	; 0x89a <__fp_zero>
 57c:	0e f4       	brtc	.+2      	; 0x580 <__addsf3x+0x1c>
 57e:	e0 95       	com	r30
 580:	0b 2e       	mov	r0, r27
 582:	ba 2f       	mov	r27, r26
 584:	a0 2d       	mov	r26, r0
 586:	0b 01       	movw	r0, r22
 588:	b9 01       	movw	r22, r18
 58a:	90 01       	movw	r18, r0
 58c:	0c 01       	movw	r0, r24
 58e:	ca 01       	movw	r24, r20
 590:	a0 01       	movw	r20, r0
 592:	11 24       	eor	r1, r1
 594:	ff 27       	eor	r31, r31
 596:	59 1b       	sub	r21, r25
 598:	99 f0       	breq	.+38     	; 0x5c0 <__addsf3x+0x5c>
 59a:	59 3f       	cpi	r21, 0xF9	; 249
 59c:	50 f4       	brcc	.+20     	; 0x5b2 <__addsf3x+0x4e>
 59e:	50 3e       	cpi	r21, 0xE0	; 224
 5a0:	68 f1       	brcs	.+90     	; 0x5fc <__addsf3x+0x98>
 5a2:	1a 16       	cp	r1, r26
 5a4:	f0 40       	sbci	r31, 0x00	; 0
 5a6:	a2 2f       	mov	r26, r18
 5a8:	23 2f       	mov	r18, r19
 5aa:	34 2f       	mov	r19, r20
 5ac:	44 27       	eor	r20, r20
 5ae:	58 5f       	subi	r21, 0xF8	; 248
 5b0:	f3 cf       	rjmp	.-26     	; 0x598 <__addsf3x+0x34>
 5b2:	46 95       	lsr	r20
 5b4:	37 95       	ror	r19
 5b6:	27 95       	ror	r18
 5b8:	a7 95       	ror	r26
 5ba:	f0 40       	sbci	r31, 0x00	; 0
 5bc:	53 95       	inc	r21
 5be:	c9 f7       	brne	.-14     	; 0x5b2 <__addsf3x+0x4e>
 5c0:	7e f4       	brtc	.+30     	; 0x5e0 <__addsf3x+0x7c>
 5c2:	1f 16       	cp	r1, r31
 5c4:	ba 0b       	sbc	r27, r26
 5c6:	62 0b       	sbc	r22, r18
 5c8:	73 0b       	sbc	r23, r19
 5ca:	84 0b       	sbc	r24, r20
 5cc:	ba f0       	brmi	.+46     	; 0x5fc <__addsf3x+0x98>
 5ce:	91 50       	subi	r25, 0x01	; 1
 5d0:	a1 f0       	breq	.+40     	; 0x5fa <__addsf3x+0x96>
 5d2:	ff 0f       	add	r31, r31
 5d4:	bb 1f       	adc	r27, r27
 5d6:	66 1f       	adc	r22, r22
 5d8:	77 1f       	adc	r23, r23
 5da:	88 1f       	adc	r24, r24
 5dc:	c2 f7       	brpl	.-16     	; 0x5ce <__addsf3x+0x6a>
 5de:	0e c0       	rjmp	.+28     	; 0x5fc <__addsf3x+0x98>
 5e0:	ba 0f       	add	r27, r26
 5e2:	62 1f       	adc	r22, r18
 5e4:	73 1f       	adc	r23, r19
 5e6:	84 1f       	adc	r24, r20
 5e8:	48 f4       	brcc	.+18     	; 0x5fc <__addsf3x+0x98>
 5ea:	87 95       	ror	r24
 5ec:	77 95       	ror	r23
 5ee:	67 95       	ror	r22
 5f0:	b7 95       	ror	r27
 5f2:	f7 95       	ror	r31
 5f4:	9e 3f       	cpi	r25, 0xFE	; 254
 5f6:	08 f0       	brcs	.+2      	; 0x5fa <__addsf3x+0x96>
 5f8:	b3 cf       	rjmp	.-154    	; 0x560 <__addsf3+0x1e>
 5fa:	93 95       	inc	r25
 5fc:	88 0f       	add	r24, r24
 5fe:	08 f0       	brcs	.+2      	; 0x602 <__addsf3x+0x9e>
 600:	99 27       	eor	r25, r25
 602:	ee 0f       	add	r30, r30
 604:	97 95       	ror	r25
 606:	87 95       	ror	r24
 608:	08 95       	ret

0000060a <__cmpsf2>:
 60a:	d9 d0       	rcall	.+434    	; 0x7be <__fp_cmp>
 60c:	08 f4       	brcc	.+2      	; 0x610 <__cmpsf2+0x6>
 60e:	81 e0       	ldi	r24, 0x01	; 1
 610:	08 95       	ret

00000612 <__divsf3>:
 612:	0c d0       	rcall	.+24     	; 0x62c <__divsf3x>
 614:	0f c1       	rjmp	.+542    	; 0x834 <__fp_round>
 616:	07 d1       	rcall	.+526    	; 0x826 <__fp_pscB>
 618:	40 f0       	brcs	.+16     	; 0x62a <__divsf3+0x18>
 61a:	fe d0       	rcall	.+508    	; 0x818 <__fp_pscA>
 61c:	30 f0       	brcs	.+12     	; 0x62a <__divsf3+0x18>
 61e:	21 f4       	brne	.+8      	; 0x628 <__divsf3+0x16>
 620:	5f 3f       	cpi	r21, 0xFF	; 255
 622:	19 f0       	breq	.+6      	; 0x62a <__divsf3+0x18>
 624:	f0 c0       	rjmp	.+480    	; 0x806 <__fp_inf>
 626:	51 11       	cpse	r21, r1
 628:	39 c1       	rjmp	.+626    	; 0x89c <__fp_szero>
 62a:	f3 c0       	rjmp	.+486    	; 0x812 <__fp_nan>

0000062c <__divsf3x>:
 62c:	14 d1       	rcall	.+552    	; 0x856 <__fp_split3>
 62e:	98 f3       	brcs	.-26     	; 0x616 <__divsf3+0x4>

00000630 <__divsf3_pse>:
 630:	99 23       	and	r25, r25
 632:	c9 f3       	breq	.-14     	; 0x626 <__divsf3+0x14>
 634:	55 23       	and	r21, r21
 636:	b1 f3       	breq	.-20     	; 0x624 <__divsf3+0x12>
 638:	95 1b       	sub	r25, r21
 63a:	55 0b       	sbc	r21, r21
 63c:	bb 27       	eor	r27, r27
 63e:	aa 27       	eor	r26, r26
 640:	62 17       	cp	r22, r18
 642:	73 07       	cpc	r23, r19
 644:	84 07       	cpc	r24, r20
 646:	38 f0       	brcs	.+14     	; 0x656 <__divsf3_pse+0x26>
 648:	9f 5f       	subi	r25, 0xFF	; 255
 64a:	5f 4f       	sbci	r21, 0xFF	; 255
 64c:	22 0f       	add	r18, r18
 64e:	33 1f       	adc	r19, r19
 650:	44 1f       	adc	r20, r20
 652:	aa 1f       	adc	r26, r26
 654:	a9 f3       	breq	.-22     	; 0x640 <__divsf3_pse+0x10>
 656:	33 d0       	rcall	.+102    	; 0x6be <__divsf3_pse+0x8e>
 658:	0e 2e       	mov	r0, r30
 65a:	3a f0       	brmi	.+14     	; 0x66a <__divsf3_pse+0x3a>
 65c:	e0 e8       	ldi	r30, 0x80	; 128
 65e:	30 d0       	rcall	.+96     	; 0x6c0 <__divsf3_pse+0x90>
 660:	91 50       	subi	r25, 0x01	; 1
 662:	50 40       	sbci	r21, 0x00	; 0
 664:	e6 95       	lsr	r30
 666:	00 1c       	adc	r0, r0
 668:	ca f7       	brpl	.-14     	; 0x65c <__divsf3_pse+0x2c>
 66a:	29 d0       	rcall	.+82     	; 0x6be <__divsf3_pse+0x8e>
 66c:	fe 2f       	mov	r31, r30
 66e:	27 d0       	rcall	.+78     	; 0x6be <__divsf3_pse+0x8e>
 670:	66 0f       	add	r22, r22
 672:	77 1f       	adc	r23, r23
 674:	88 1f       	adc	r24, r24
 676:	bb 1f       	adc	r27, r27
 678:	26 17       	cp	r18, r22
 67a:	37 07       	cpc	r19, r23
 67c:	48 07       	cpc	r20, r24
 67e:	ab 07       	cpc	r26, r27
 680:	b0 e8       	ldi	r27, 0x80	; 128
 682:	09 f0       	breq	.+2      	; 0x686 <__divsf3_pse+0x56>
 684:	bb 0b       	sbc	r27, r27
 686:	80 2d       	mov	r24, r0
 688:	bf 01       	movw	r22, r30
 68a:	ff 27       	eor	r31, r31
 68c:	93 58       	subi	r25, 0x83	; 131
 68e:	5f 4f       	sbci	r21, 0xFF	; 255
 690:	2a f0       	brmi	.+10     	; 0x69c <__divsf3_pse+0x6c>
 692:	9e 3f       	cpi	r25, 0xFE	; 254
 694:	51 05       	cpc	r21, r1
 696:	68 f0       	brcs	.+26     	; 0x6b2 <__divsf3_pse+0x82>
 698:	b6 c0       	rjmp	.+364    	; 0x806 <__fp_inf>
 69a:	00 c1       	rjmp	.+512    	; 0x89c <__fp_szero>
 69c:	5f 3f       	cpi	r21, 0xFF	; 255
 69e:	ec f3       	brlt	.-6      	; 0x69a <__divsf3_pse+0x6a>
 6a0:	98 3e       	cpi	r25, 0xE8	; 232
 6a2:	dc f3       	brlt	.-10     	; 0x69a <__divsf3_pse+0x6a>
 6a4:	86 95       	lsr	r24
 6a6:	77 95       	ror	r23
 6a8:	67 95       	ror	r22
 6aa:	b7 95       	ror	r27
 6ac:	f7 95       	ror	r31
 6ae:	9f 5f       	subi	r25, 0xFF	; 255
 6b0:	c9 f7       	brne	.-14     	; 0x6a4 <__divsf3_pse+0x74>
 6b2:	88 0f       	add	r24, r24
 6b4:	91 1d       	adc	r25, r1
 6b6:	96 95       	lsr	r25
 6b8:	87 95       	ror	r24
 6ba:	97 f9       	bld	r25, 7
 6bc:	08 95       	ret
 6be:	e1 e0       	ldi	r30, 0x01	; 1
 6c0:	66 0f       	add	r22, r22
 6c2:	77 1f       	adc	r23, r23
 6c4:	88 1f       	adc	r24, r24
 6c6:	bb 1f       	adc	r27, r27
 6c8:	62 17       	cp	r22, r18
 6ca:	73 07       	cpc	r23, r19
 6cc:	84 07       	cpc	r24, r20
 6ce:	ba 07       	cpc	r27, r26
 6d0:	20 f0       	brcs	.+8      	; 0x6da <__divsf3_pse+0xaa>
 6d2:	62 1b       	sub	r22, r18
 6d4:	73 0b       	sbc	r23, r19
 6d6:	84 0b       	sbc	r24, r20
 6d8:	ba 0b       	sbc	r27, r26
 6da:	ee 1f       	adc	r30, r30
 6dc:	88 f7       	brcc	.-30     	; 0x6c0 <__divsf3_pse+0x90>
 6de:	e0 95       	com	r30
 6e0:	08 95       	ret

000006e2 <__fixsfsi>:
 6e2:	04 d0       	rcall	.+8      	; 0x6ec <__fixunssfsi>
 6e4:	68 94       	set
 6e6:	b1 11       	cpse	r27, r1
 6e8:	d9 c0       	rjmp	.+434    	; 0x89c <__fp_szero>
 6ea:	08 95       	ret

000006ec <__fixunssfsi>:
 6ec:	bc d0       	rcall	.+376    	; 0x866 <__fp_splitA>
 6ee:	88 f0       	brcs	.+34     	; 0x712 <__fixunssfsi+0x26>
 6f0:	9f 57       	subi	r25, 0x7F	; 127
 6f2:	90 f0       	brcs	.+36     	; 0x718 <__fixunssfsi+0x2c>
 6f4:	b9 2f       	mov	r27, r25
 6f6:	99 27       	eor	r25, r25
 6f8:	b7 51       	subi	r27, 0x17	; 23
 6fa:	a0 f0       	brcs	.+40     	; 0x724 <__fixunssfsi+0x38>
 6fc:	d1 f0       	breq	.+52     	; 0x732 <__fixunssfsi+0x46>
 6fe:	66 0f       	add	r22, r22
 700:	77 1f       	adc	r23, r23
 702:	88 1f       	adc	r24, r24
 704:	99 1f       	adc	r25, r25
 706:	1a f0       	brmi	.+6      	; 0x70e <__fixunssfsi+0x22>
 708:	ba 95       	dec	r27
 70a:	c9 f7       	brne	.-14     	; 0x6fe <__fixunssfsi+0x12>
 70c:	12 c0       	rjmp	.+36     	; 0x732 <__fixunssfsi+0x46>
 70e:	b1 30       	cpi	r27, 0x01	; 1
 710:	81 f0       	breq	.+32     	; 0x732 <__fixunssfsi+0x46>
 712:	c3 d0       	rcall	.+390    	; 0x89a <__fp_zero>
 714:	b1 e0       	ldi	r27, 0x01	; 1
 716:	08 95       	ret
 718:	c0 c0       	rjmp	.+384    	; 0x89a <__fp_zero>
 71a:	67 2f       	mov	r22, r23
 71c:	78 2f       	mov	r23, r24
 71e:	88 27       	eor	r24, r24
 720:	b8 5f       	subi	r27, 0xF8	; 248
 722:	39 f0       	breq	.+14     	; 0x732 <__fixunssfsi+0x46>
 724:	b9 3f       	cpi	r27, 0xF9	; 249
 726:	cc f3       	brlt	.-14     	; 0x71a <__fixunssfsi+0x2e>
 728:	86 95       	lsr	r24
 72a:	77 95       	ror	r23
 72c:	67 95       	ror	r22
 72e:	b3 95       	inc	r27
 730:	d9 f7       	brne	.-10     	; 0x728 <__fixunssfsi+0x3c>
 732:	3e f4       	brtc	.+14     	; 0x742 <__fixunssfsi+0x56>
 734:	90 95       	com	r25
 736:	80 95       	com	r24
 738:	70 95       	com	r23
 73a:	61 95       	neg	r22
 73c:	7f 4f       	sbci	r23, 0xFF	; 255
 73e:	8f 4f       	sbci	r24, 0xFF	; 255
 740:	9f 4f       	sbci	r25, 0xFF	; 255
 742:	08 95       	ret

00000744 <__floatunsisf>:
 744:	e8 94       	clt
 746:	09 c0       	rjmp	.+18     	; 0x75a <__floatsisf+0x12>

00000748 <__floatsisf>:
 748:	97 fb       	bst	r25, 7
 74a:	3e f4       	brtc	.+14     	; 0x75a <__floatsisf+0x12>
 74c:	90 95       	com	r25
 74e:	80 95       	com	r24
 750:	70 95       	com	r23
 752:	61 95       	neg	r22
 754:	7f 4f       	sbci	r23, 0xFF	; 255
 756:	8f 4f       	sbci	r24, 0xFF	; 255
 758:	9f 4f       	sbci	r25, 0xFF	; 255
 75a:	99 23       	and	r25, r25
 75c:	a9 f0       	breq	.+42     	; 0x788 <__floatsisf+0x40>
 75e:	f9 2f       	mov	r31, r25
 760:	96 e9       	ldi	r25, 0x96	; 150
 762:	bb 27       	eor	r27, r27
 764:	93 95       	inc	r25
 766:	f6 95       	lsr	r31
 768:	87 95       	ror	r24
 76a:	77 95       	ror	r23
 76c:	67 95       	ror	r22
 76e:	b7 95       	ror	r27
 770:	f1 11       	cpse	r31, r1
 772:	f8 cf       	rjmp	.-16     	; 0x764 <__floatsisf+0x1c>
 774:	fa f4       	brpl	.+62     	; 0x7b4 <__floatsisf+0x6c>
 776:	bb 0f       	add	r27, r27
 778:	11 f4       	brne	.+4      	; 0x77e <__floatsisf+0x36>
 77a:	60 ff       	sbrs	r22, 0
 77c:	1b c0       	rjmp	.+54     	; 0x7b4 <__floatsisf+0x6c>
 77e:	6f 5f       	subi	r22, 0xFF	; 255
 780:	7f 4f       	sbci	r23, 0xFF	; 255
 782:	8f 4f       	sbci	r24, 0xFF	; 255
 784:	9f 4f       	sbci	r25, 0xFF	; 255
 786:	16 c0       	rjmp	.+44     	; 0x7b4 <__floatsisf+0x6c>
 788:	88 23       	and	r24, r24
 78a:	11 f0       	breq	.+4      	; 0x790 <__floatsisf+0x48>
 78c:	96 e9       	ldi	r25, 0x96	; 150
 78e:	11 c0       	rjmp	.+34     	; 0x7b2 <__floatsisf+0x6a>
 790:	77 23       	and	r23, r23
 792:	21 f0       	breq	.+8      	; 0x79c <__floatsisf+0x54>
 794:	9e e8       	ldi	r25, 0x8E	; 142
 796:	87 2f       	mov	r24, r23
 798:	76 2f       	mov	r23, r22
 79a:	05 c0       	rjmp	.+10     	; 0x7a6 <__floatsisf+0x5e>
 79c:	66 23       	and	r22, r22
 79e:	71 f0       	breq	.+28     	; 0x7bc <__floatsisf+0x74>
 7a0:	96 e8       	ldi	r25, 0x86	; 134
 7a2:	86 2f       	mov	r24, r22
 7a4:	70 e0       	ldi	r23, 0x00	; 0
 7a6:	60 e0       	ldi	r22, 0x00	; 0
 7a8:	2a f0       	brmi	.+10     	; 0x7b4 <__floatsisf+0x6c>
 7aa:	9a 95       	dec	r25
 7ac:	66 0f       	add	r22, r22
 7ae:	77 1f       	adc	r23, r23
 7b0:	88 1f       	adc	r24, r24
 7b2:	da f7       	brpl	.-10     	; 0x7aa <__floatsisf+0x62>
 7b4:	88 0f       	add	r24, r24
 7b6:	96 95       	lsr	r25
 7b8:	87 95       	ror	r24
 7ba:	97 f9       	bld	r25, 7
 7bc:	08 95       	ret

000007be <__fp_cmp>:
 7be:	99 0f       	add	r25, r25
 7c0:	00 08       	sbc	r0, r0
 7c2:	55 0f       	add	r21, r21
 7c4:	aa 0b       	sbc	r26, r26
 7c6:	e0 e8       	ldi	r30, 0x80	; 128
 7c8:	fe ef       	ldi	r31, 0xFE	; 254
 7ca:	16 16       	cp	r1, r22
 7cc:	17 06       	cpc	r1, r23
 7ce:	e8 07       	cpc	r30, r24
 7d0:	f9 07       	cpc	r31, r25
 7d2:	c0 f0       	brcs	.+48     	; 0x804 <__fp_cmp+0x46>
 7d4:	12 16       	cp	r1, r18
 7d6:	13 06       	cpc	r1, r19
 7d8:	e4 07       	cpc	r30, r20
 7da:	f5 07       	cpc	r31, r21
 7dc:	98 f0       	brcs	.+38     	; 0x804 <__fp_cmp+0x46>
 7de:	62 1b       	sub	r22, r18
 7e0:	73 0b       	sbc	r23, r19
 7e2:	84 0b       	sbc	r24, r20
 7e4:	95 0b       	sbc	r25, r21
 7e6:	39 f4       	brne	.+14     	; 0x7f6 <__fp_cmp+0x38>
 7e8:	0a 26       	eor	r0, r26
 7ea:	61 f0       	breq	.+24     	; 0x804 <__fp_cmp+0x46>
 7ec:	23 2b       	or	r18, r19
 7ee:	24 2b       	or	r18, r20
 7f0:	25 2b       	or	r18, r21
 7f2:	21 f4       	brne	.+8      	; 0x7fc <__fp_cmp+0x3e>
 7f4:	08 95       	ret
 7f6:	0a 26       	eor	r0, r26
 7f8:	09 f4       	brne	.+2      	; 0x7fc <__fp_cmp+0x3e>
 7fa:	a1 40       	sbci	r26, 0x01	; 1
 7fc:	a6 95       	lsr	r26
 7fe:	8f ef       	ldi	r24, 0xFF	; 255
 800:	81 1d       	adc	r24, r1
 802:	81 1d       	adc	r24, r1
 804:	08 95       	ret

00000806 <__fp_inf>:
 806:	97 f9       	bld	r25, 7
 808:	9f 67       	ori	r25, 0x7F	; 127
 80a:	80 e8       	ldi	r24, 0x80	; 128
 80c:	70 e0       	ldi	r23, 0x00	; 0
 80e:	60 e0       	ldi	r22, 0x00	; 0
 810:	08 95       	ret

00000812 <__fp_nan>:
 812:	9f ef       	ldi	r25, 0xFF	; 255
 814:	80 ec       	ldi	r24, 0xC0	; 192
 816:	08 95       	ret

00000818 <__fp_pscA>:
 818:	00 24       	eor	r0, r0
 81a:	0a 94       	dec	r0
 81c:	16 16       	cp	r1, r22
 81e:	17 06       	cpc	r1, r23
 820:	18 06       	cpc	r1, r24
 822:	09 06       	cpc	r0, r25
 824:	08 95       	ret

00000826 <__fp_pscB>:
 826:	00 24       	eor	r0, r0
 828:	0a 94       	dec	r0
 82a:	12 16       	cp	r1, r18
 82c:	13 06       	cpc	r1, r19
 82e:	14 06       	cpc	r1, r20
 830:	05 06       	cpc	r0, r21
 832:	08 95       	ret

00000834 <__fp_round>:
 834:	09 2e       	mov	r0, r25
 836:	03 94       	inc	r0
 838:	00 0c       	add	r0, r0
 83a:	11 f4       	brne	.+4      	; 0x840 <__fp_round+0xc>
 83c:	88 23       	and	r24, r24
 83e:	52 f0       	brmi	.+20     	; 0x854 <__fp_round+0x20>
 840:	bb 0f       	add	r27, r27
 842:	40 f4       	brcc	.+16     	; 0x854 <__fp_round+0x20>
 844:	bf 2b       	or	r27, r31
 846:	11 f4       	brne	.+4      	; 0x84c <__fp_round+0x18>
 848:	60 ff       	sbrs	r22, 0
 84a:	04 c0       	rjmp	.+8      	; 0x854 <__fp_round+0x20>
 84c:	6f 5f       	subi	r22, 0xFF	; 255
 84e:	7f 4f       	sbci	r23, 0xFF	; 255
 850:	8f 4f       	sbci	r24, 0xFF	; 255
 852:	9f 4f       	sbci	r25, 0xFF	; 255
 854:	08 95       	ret

00000856 <__fp_split3>:
 856:	57 fd       	sbrc	r21, 7
 858:	90 58       	subi	r25, 0x80	; 128
 85a:	44 0f       	add	r20, r20
 85c:	55 1f       	adc	r21, r21
 85e:	59 f0       	breq	.+22     	; 0x876 <__fp_splitA+0x10>
 860:	5f 3f       	cpi	r21, 0xFF	; 255
 862:	71 f0       	breq	.+28     	; 0x880 <__fp_splitA+0x1a>
 864:	47 95       	ror	r20

00000866 <__fp_splitA>:
 866:	88 0f       	add	r24, r24
 868:	97 fb       	bst	r25, 7
 86a:	99 1f       	adc	r25, r25
 86c:	61 f0       	breq	.+24     	; 0x886 <__fp_splitA+0x20>
 86e:	9f 3f       	cpi	r25, 0xFF	; 255
 870:	79 f0       	breq	.+30     	; 0x890 <__fp_splitA+0x2a>
 872:	87 95       	ror	r24
 874:	08 95       	ret
 876:	12 16       	cp	r1, r18
 878:	13 06       	cpc	r1, r19
 87a:	14 06       	cpc	r1, r20
 87c:	55 1f       	adc	r21, r21
 87e:	f2 cf       	rjmp	.-28     	; 0x864 <__fp_split3+0xe>
 880:	46 95       	lsr	r20
 882:	f1 df       	rcall	.-30     	; 0x866 <__fp_splitA>
 884:	08 c0       	rjmp	.+16     	; 0x896 <__fp_splitA+0x30>
 886:	16 16       	cp	r1, r22
 888:	17 06       	cpc	r1, r23
 88a:	18 06       	cpc	r1, r24
 88c:	99 1f       	adc	r25, r25
 88e:	f1 cf       	rjmp	.-30     	; 0x872 <__fp_splitA+0xc>
 890:	86 95       	lsr	r24
 892:	71 05       	cpc	r23, r1
 894:	61 05       	cpc	r22, r1
 896:	08 94       	sec
 898:	08 95       	ret

0000089a <__fp_zero>:
 89a:	e8 94       	clt

0000089c <__fp_szero>:
 89c:	bb 27       	eor	r27, r27
 89e:	66 27       	eor	r22, r22
 8a0:	77 27       	eor	r23, r23
 8a2:	cb 01       	movw	r24, r22
 8a4:	97 f9       	bld	r25, 7
 8a6:	08 95       	ret

000008a8 <__gesf2>:
 8a8:	8a df       	rcall	.-236    	; 0x7be <__fp_cmp>
 8aa:	08 f4       	brcc	.+2      	; 0x8ae <__gesf2+0x6>
 8ac:	8f ef       	ldi	r24, 0xFF	; 255
 8ae:	08 95       	ret
 8b0:	0e f0       	brts	.+2      	; 0x8b4 <__gesf2+0xc>
 8b2:	5e c1       	rjmp	.+700    	; 0xb70 <__fp_mpack>
 8b4:	ae cf       	rjmp	.-164    	; 0x812 <__fp_nan>
 8b6:	68 94       	set
 8b8:	a6 cf       	rjmp	.-180    	; 0x806 <__fp_inf>

000008ba <log>:
 8ba:	d5 df       	rcall	.-86     	; 0x866 <__fp_splitA>
 8bc:	c8 f3       	brcs	.-14     	; 0x8b0 <__gesf2+0x8>
 8be:	99 23       	and	r25, r25
 8c0:	d1 f3       	breq	.-12     	; 0x8b6 <__gesf2+0xe>
 8c2:	c6 f3       	brts	.-16     	; 0x8b4 <__gesf2+0xc>
 8c4:	df 93       	push	r29
 8c6:	cf 93       	push	r28
 8c8:	1f 93       	push	r17
 8ca:	0f 93       	push	r16
 8cc:	ff 92       	push	r15
 8ce:	c9 2f       	mov	r28, r25
 8d0:	dd 27       	eor	r29, r29
 8d2:	88 23       	and	r24, r24
 8d4:	2a f0       	brmi	.+10     	; 0x8e0 <log+0x26>
 8d6:	21 97       	sbiw	r28, 0x01	; 1
 8d8:	66 0f       	add	r22, r22
 8da:	77 1f       	adc	r23, r23
 8dc:	88 1f       	adc	r24, r24
 8de:	da f7       	brpl	.-10     	; 0x8d6 <log+0x1c>
 8e0:	20 e0       	ldi	r18, 0x00	; 0
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	40 e8       	ldi	r20, 0x80	; 128
 8e6:	5f eb       	ldi	r21, 0xBF	; 191
 8e8:	9f e3       	ldi	r25, 0x3F	; 63
 8ea:	88 39       	cpi	r24, 0x98	; 152
 8ec:	20 f0       	brcs	.+8      	; 0x8f6 <log+0x3c>
 8ee:	80 3e       	cpi	r24, 0xE0	; 224
 8f0:	30 f0       	brcs	.+12     	; 0x8fe <log+0x44>
 8f2:	21 96       	adiw	r28, 0x01	; 1
 8f4:	8f 77       	andi	r24, 0x7F	; 127
 8f6:	25 de       	rcall	.-950    	; 0x542 <__addsf3>
 8f8:	e4 e3       	ldi	r30, 0x34	; 52
 8fa:	f0 e0       	ldi	r31, 0x00	; 0
 8fc:	03 c0       	rjmp	.+6      	; 0x904 <log+0x4a>
 8fe:	21 de       	rcall	.-958    	; 0x542 <__addsf3>
 900:	e1 e6       	ldi	r30, 0x61	; 97
 902:	f0 e0       	ldi	r31, 0x00	; 0
 904:	43 d1       	rcall	.+646    	; 0xb8c <__fp_powser>
 906:	8b 01       	movw	r16, r22
 908:	be 01       	movw	r22, r28
 90a:	ec 01       	movw	r28, r24
 90c:	fb 2e       	mov	r15, r27
 90e:	6f 57       	subi	r22, 0x7F	; 127
 910:	71 09       	sbc	r23, r1
 912:	75 95       	asr	r23
 914:	77 1f       	adc	r23, r23
 916:	88 0b       	sbc	r24, r24
 918:	99 0b       	sbc	r25, r25
 91a:	16 df       	rcall	.-468    	; 0x748 <__floatsisf>
 91c:	28 e1       	ldi	r18, 0x18	; 24
 91e:	32 e7       	ldi	r19, 0x72	; 114
 920:	41 e3       	ldi	r20, 0x31	; 49
 922:	5f e3       	ldi	r21, 0x3F	; 63
 924:	16 d0       	rcall	.+44     	; 0x952 <__mulsf3x>
 926:	af 2d       	mov	r26, r15
 928:	98 01       	movw	r18, r16
 92a:	ae 01       	movw	r20, r28
 92c:	ff 90       	pop	r15
 92e:	0f 91       	pop	r16
 930:	1f 91       	pop	r17
 932:	cf 91       	pop	r28
 934:	df 91       	pop	r29
 936:	16 de       	rcall	.-980    	; 0x564 <__addsf3x>
 938:	7d cf       	rjmp	.-262    	; 0x834 <__fp_round>

0000093a <__mulsf3>:
 93a:	0b d0       	rcall	.+22     	; 0x952 <__mulsf3x>
 93c:	7b cf       	rjmp	.-266    	; 0x834 <__fp_round>
 93e:	6c df       	rcall	.-296    	; 0x818 <__fp_pscA>
 940:	28 f0       	brcs	.+10     	; 0x94c <__mulsf3+0x12>
 942:	71 df       	rcall	.-286    	; 0x826 <__fp_pscB>
 944:	18 f0       	brcs	.+6      	; 0x94c <__mulsf3+0x12>
 946:	95 23       	and	r25, r21
 948:	09 f0       	breq	.+2      	; 0x94c <__mulsf3+0x12>
 94a:	5d cf       	rjmp	.-326    	; 0x806 <__fp_inf>
 94c:	62 cf       	rjmp	.-316    	; 0x812 <__fp_nan>
 94e:	11 24       	eor	r1, r1
 950:	a5 cf       	rjmp	.-182    	; 0x89c <__fp_szero>

00000952 <__mulsf3x>:
 952:	81 df       	rcall	.-254    	; 0x856 <__fp_split3>
 954:	a0 f3       	brcs	.-24     	; 0x93e <__mulsf3+0x4>

00000956 <__mulsf3_pse>:
 956:	95 9f       	mul	r25, r21
 958:	d1 f3       	breq	.-12     	; 0x94e <__mulsf3+0x14>
 95a:	95 0f       	add	r25, r21
 95c:	50 e0       	ldi	r21, 0x00	; 0
 95e:	55 1f       	adc	r21, r21
 960:	62 9f       	mul	r22, r18
 962:	f0 01       	movw	r30, r0
 964:	72 9f       	mul	r23, r18
 966:	bb 27       	eor	r27, r27
 968:	f0 0d       	add	r31, r0
 96a:	b1 1d       	adc	r27, r1
 96c:	63 9f       	mul	r22, r19
 96e:	aa 27       	eor	r26, r26
 970:	f0 0d       	add	r31, r0
 972:	b1 1d       	adc	r27, r1
 974:	aa 1f       	adc	r26, r26
 976:	64 9f       	mul	r22, r20
 978:	66 27       	eor	r22, r22
 97a:	b0 0d       	add	r27, r0
 97c:	a1 1d       	adc	r26, r1
 97e:	66 1f       	adc	r22, r22
 980:	82 9f       	mul	r24, r18
 982:	22 27       	eor	r18, r18
 984:	b0 0d       	add	r27, r0
 986:	a1 1d       	adc	r26, r1
 988:	62 1f       	adc	r22, r18
 98a:	73 9f       	mul	r23, r19
 98c:	b0 0d       	add	r27, r0
 98e:	a1 1d       	adc	r26, r1
 990:	62 1f       	adc	r22, r18
 992:	83 9f       	mul	r24, r19
 994:	a0 0d       	add	r26, r0
 996:	61 1d       	adc	r22, r1
 998:	22 1f       	adc	r18, r18
 99a:	74 9f       	mul	r23, r20
 99c:	33 27       	eor	r19, r19
 99e:	a0 0d       	add	r26, r0
 9a0:	61 1d       	adc	r22, r1
 9a2:	23 1f       	adc	r18, r19
 9a4:	84 9f       	mul	r24, r20
 9a6:	60 0d       	add	r22, r0
 9a8:	21 1d       	adc	r18, r1
 9aa:	82 2f       	mov	r24, r18
 9ac:	76 2f       	mov	r23, r22
 9ae:	6a 2f       	mov	r22, r26
 9b0:	11 24       	eor	r1, r1
 9b2:	9f 57       	subi	r25, 0x7F	; 127
 9b4:	50 40       	sbci	r21, 0x00	; 0
 9b6:	8a f0       	brmi	.+34     	; 0x9da <__mulsf3_pse+0x84>
 9b8:	e1 f0       	breq	.+56     	; 0x9f2 <__mulsf3_pse+0x9c>
 9ba:	88 23       	and	r24, r24
 9bc:	4a f0       	brmi	.+18     	; 0x9d0 <__mulsf3_pse+0x7a>
 9be:	ee 0f       	add	r30, r30
 9c0:	ff 1f       	adc	r31, r31
 9c2:	bb 1f       	adc	r27, r27
 9c4:	66 1f       	adc	r22, r22
 9c6:	77 1f       	adc	r23, r23
 9c8:	88 1f       	adc	r24, r24
 9ca:	91 50       	subi	r25, 0x01	; 1
 9cc:	50 40       	sbci	r21, 0x00	; 0
 9ce:	a9 f7       	brne	.-22     	; 0x9ba <__mulsf3_pse+0x64>
 9d0:	9e 3f       	cpi	r25, 0xFE	; 254
 9d2:	51 05       	cpc	r21, r1
 9d4:	70 f0       	brcs	.+28     	; 0x9f2 <__mulsf3_pse+0x9c>
 9d6:	17 cf       	rjmp	.-466    	; 0x806 <__fp_inf>
 9d8:	61 cf       	rjmp	.-318    	; 0x89c <__fp_szero>
 9da:	5f 3f       	cpi	r21, 0xFF	; 255
 9dc:	ec f3       	brlt	.-6      	; 0x9d8 <__mulsf3_pse+0x82>
 9de:	98 3e       	cpi	r25, 0xE8	; 232
 9e0:	dc f3       	brlt	.-10     	; 0x9d8 <__mulsf3_pse+0x82>
 9e2:	86 95       	lsr	r24
 9e4:	77 95       	ror	r23
 9e6:	67 95       	ror	r22
 9e8:	b7 95       	ror	r27
 9ea:	f7 95       	ror	r31
 9ec:	e7 95       	ror	r30
 9ee:	9f 5f       	subi	r25, 0xFF	; 255
 9f0:	c1 f7       	brne	.-16     	; 0x9e2 <__mulsf3_pse+0x8c>
 9f2:	fe 2b       	or	r31, r30
 9f4:	88 0f       	add	r24, r24
 9f6:	91 1d       	adc	r25, r1
 9f8:	96 95       	lsr	r25
 9fa:	87 95       	ror	r24
 9fc:	97 f9       	bld	r25, 7
 9fe:	08 95       	ret

00000a00 <pow>:
 a00:	fa 01       	movw	r30, r20
 a02:	ee 0f       	add	r30, r30
 a04:	ff 1f       	adc	r31, r31
 a06:	30 96       	adiw	r30, 0x00	; 0
 a08:	21 05       	cpc	r18, r1
 a0a:	31 05       	cpc	r19, r1
 a0c:	99 f1       	breq	.+102    	; 0xa74 <pow+0x74>
 a0e:	61 15       	cp	r22, r1
 a10:	71 05       	cpc	r23, r1
 a12:	61 f4       	brne	.+24     	; 0xa2c <pow+0x2c>
 a14:	80 38       	cpi	r24, 0x80	; 128
 a16:	bf e3       	ldi	r27, 0x3F	; 63
 a18:	9b 07       	cpc	r25, r27
 a1a:	49 f1       	breq	.+82     	; 0xa6e <pow+0x6e>
 a1c:	68 94       	set
 a1e:	90 38       	cpi	r25, 0x80	; 128
 a20:	81 05       	cpc	r24, r1
 a22:	61 f0       	breq	.+24     	; 0xa3c <pow+0x3c>
 a24:	80 38       	cpi	r24, 0x80	; 128
 a26:	bf ef       	ldi	r27, 0xFF	; 255
 a28:	9b 07       	cpc	r25, r27
 a2a:	41 f0       	breq	.+16     	; 0xa3c <pow+0x3c>
 a2c:	99 23       	and	r25, r25
 a2e:	42 f5       	brpl	.+80     	; 0xa80 <pow+0x80>
 a30:	ff 3f       	cpi	r31, 0xFF	; 255
 a32:	e1 05       	cpc	r30, r1
 a34:	31 05       	cpc	r19, r1
 a36:	21 05       	cpc	r18, r1
 a38:	11 f1       	breq	.+68     	; 0xa7e <pow+0x7e>
 a3a:	e8 94       	clt
 a3c:	08 94       	sec
 a3e:	e7 95       	ror	r30
 a40:	d9 01       	movw	r26, r18
 a42:	aa 23       	and	r26, r26
 a44:	29 f4       	brne	.+10     	; 0xa50 <pow+0x50>
 a46:	ab 2f       	mov	r26, r27
 a48:	be 2f       	mov	r27, r30
 a4a:	f8 5f       	subi	r31, 0xF8	; 248
 a4c:	d0 f3       	brcs	.-12     	; 0xa42 <pow+0x42>
 a4e:	10 c0       	rjmp	.+32     	; 0xa70 <pow+0x70>
 a50:	ff 5f       	subi	r31, 0xFF	; 255
 a52:	70 f4       	brcc	.+28     	; 0xa70 <pow+0x70>
 a54:	a6 95       	lsr	r26
 a56:	e0 f7       	brcc	.-8      	; 0xa50 <pow+0x50>
 a58:	f7 39       	cpi	r31, 0x97	; 151
 a5a:	50 f0       	brcs	.+20     	; 0xa70 <pow+0x70>
 a5c:	19 f0       	breq	.+6      	; 0xa64 <pow+0x64>
 a5e:	ff 3a       	cpi	r31, 0xAF	; 175
 a60:	38 f4       	brcc	.+14     	; 0xa70 <pow+0x70>
 a62:	9f 77       	andi	r25, 0x7F	; 127
 a64:	9f 93       	push	r25
 a66:	0c d0       	rcall	.+24     	; 0xa80 <pow+0x80>
 a68:	0f 90       	pop	r0
 a6a:	07 fc       	sbrc	r0, 7
 a6c:	90 58       	subi	r25, 0x80	; 128
 a6e:	08 95       	ret
 a70:	3e f0       	brts	.+14     	; 0xa80 <pow+0x80>
 a72:	cf ce       	rjmp	.-610    	; 0x812 <__fp_nan>
 a74:	60 e0       	ldi	r22, 0x00	; 0
 a76:	70 e0       	ldi	r23, 0x00	; 0
 a78:	80 e8       	ldi	r24, 0x80	; 128
 a7a:	9f e3       	ldi	r25, 0x3F	; 63
 a7c:	08 95       	ret
 a7e:	4f e7       	ldi	r20, 0x7F	; 127
 a80:	9f 77       	andi	r25, 0x7F	; 127
 a82:	5f 93       	push	r21
 a84:	4f 93       	push	r20
 a86:	3f 93       	push	r19
 a88:	2f 93       	push	r18
 a8a:	17 df       	rcall	.-466    	; 0x8ba <log>
 a8c:	2f 91       	pop	r18
 a8e:	3f 91       	pop	r19
 a90:	4f 91       	pop	r20
 a92:	5f 91       	pop	r21
 a94:	52 df       	rcall	.-348    	; 0x93a <__mulsf3>
 a96:	25 c0       	rjmp	.+74     	; 0xae2 <exp>

00000a98 <round>:
 a98:	e6 de       	rcall	.-564    	; 0x866 <__fp_splitA>
 a9a:	e0 f0       	brcs	.+56     	; 0xad4 <round+0x3c>
 a9c:	9e 37       	cpi	r25, 0x7E	; 126
 a9e:	d8 f0       	brcs	.+54     	; 0xad6 <round+0x3e>
 aa0:	96 39       	cpi	r25, 0x96	; 150
 aa2:	b8 f4       	brcc	.+46     	; 0xad2 <round+0x3a>
 aa4:	9e 38       	cpi	r25, 0x8E	; 142
 aa6:	48 f4       	brcc	.+18     	; 0xaba <round+0x22>
 aa8:	67 2f       	mov	r22, r23
 aaa:	78 2f       	mov	r23, r24
 aac:	88 27       	eor	r24, r24
 aae:	98 5f       	subi	r25, 0xF8	; 248
 ab0:	f9 cf       	rjmp	.-14     	; 0xaa4 <round+0xc>
 ab2:	86 95       	lsr	r24
 ab4:	77 95       	ror	r23
 ab6:	67 95       	ror	r22
 ab8:	93 95       	inc	r25
 aba:	95 39       	cpi	r25, 0x95	; 149
 abc:	d0 f3       	brcs	.-12     	; 0xab2 <round+0x1a>
 abe:	b6 2f       	mov	r27, r22
 ac0:	b1 70       	andi	r27, 0x01	; 1
 ac2:	6b 0f       	add	r22, r27
 ac4:	71 1d       	adc	r23, r1
 ac6:	81 1d       	adc	r24, r1
 ac8:	20 f4       	brcc	.+8      	; 0xad2 <round+0x3a>
 aca:	87 95       	ror	r24
 acc:	77 95       	ror	r23
 ace:	67 95       	ror	r22
 ad0:	93 95       	inc	r25
 ad2:	33 c0       	rjmp	.+102    	; 0xb3a <__fp_mintl>
 ad4:	4d c0       	rjmp	.+154    	; 0xb70 <__fp_mpack>
 ad6:	e2 ce       	rjmp	.-572    	; 0x89c <__fp_szero>
 ad8:	19 f4       	brne	.+6      	; 0xae0 <round+0x48>
 ada:	0e f0       	brts	.+2      	; 0xade <round+0x46>
 adc:	94 ce       	rjmp	.-728    	; 0x806 <__fp_inf>
 ade:	dd ce       	rjmp	.-582    	; 0x89a <__fp_zero>
 ae0:	98 ce       	rjmp	.-720    	; 0x812 <__fp_nan>

00000ae2 <exp>:
 ae2:	c1 de       	rcall	.-638    	; 0x866 <__fp_splitA>
 ae4:	c8 f3       	brcs	.-14     	; 0xad8 <round+0x40>
 ae6:	96 38       	cpi	r25, 0x86	; 134
 ae8:	c0 f7       	brcc	.-16     	; 0xada <round+0x42>
 aea:	07 f8       	bld	r0, 7
 aec:	0f 92       	push	r0
 aee:	e8 94       	clt
 af0:	2b e3       	ldi	r18, 0x3B	; 59
 af2:	3a ea       	ldi	r19, 0xAA	; 170
 af4:	48 eb       	ldi	r20, 0xB8	; 184
 af6:	5f e7       	ldi	r21, 0x7F	; 127
 af8:	2e df       	rcall	.-420    	; 0x956 <__mulsf3_pse>
 afa:	0f 92       	push	r0
 afc:	0f 92       	push	r0
 afe:	0f 92       	push	r0
 b00:	4d b7       	in	r20, 0x3d	; 61
 b02:	5e b7       	in	r21, 0x3e	; 62
 b04:	0f 92       	push	r0
 b06:	a4 d0       	rcall	.+328    	; 0xc50 <modf>
 b08:	ee e8       	ldi	r30, 0x8E	; 142
 b0a:	f0 e0       	ldi	r31, 0x00	; 0
 b0c:	3f d0       	rcall	.+126    	; 0xb8c <__fp_powser>
 b0e:	4f 91       	pop	r20
 b10:	5f 91       	pop	r21
 b12:	ef 91       	pop	r30
 b14:	ff 91       	pop	r31
 b16:	e5 95       	asr	r30
 b18:	ee 1f       	adc	r30, r30
 b1a:	ff 1f       	adc	r31, r31
 b1c:	49 f0       	breq	.+18     	; 0xb30 <exp+0x4e>
 b1e:	fe 57       	subi	r31, 0x7E	; 126
 b20:	e0 68       	ori	r30, 0x80	; 128
 b22:	44 27       	eor	r20, r20
 b24:	ee 0f       	add	r30, r30
 b26:	44 1f       	adc	r20, r20
 b28:	fa 95       	dec	r31
 b2a:	e1 f7       	brne	.-8      	; 0xb24 <exp+0x42>
 b2c:	41 95       	neg	r20
 b2e:	55 0b       	sbc	r21, r21
 b30:	5b d0       	rcall	.+182    	; 0xbe8 <ldexp>
 b32:	0f 90       	pop	r0
 b34:	07 fe       	sbrs	r0, 7
 b36:	4f c0       	rjmp	.+158    	; 0xbd6 <inverse>
 b38:	08 95       	ret

00000b3a <__fp_mintl>:
 b3a:	88 23       	and	r24, r24
 b3c:	71 f4       	brne	.+28     	; 0xb5a <__fp_mintl+0x20>
 b3e:	77 23       	and	r23, r23
 b40:	21 f0       	breq	.+8      	; 0xb4a <__fp_mintl+0x10>
 b42:	98 50       	subi	r25, 0x08	; 8
 b44:	87 2b       	or	r24, r23
 b46:	76 2f       	mov	r23, r22
 b48:	07 c0       	rjmp	.+14     	; 0xb58 <__fp_mintl+0x1e>
 b4a:	66 23       	and	r22, r22
 b4c:	11 f4       	brne	.+4      	; 0xb52 <__fp_mintl+0x18>
 b4e:	99 27       	eor	r25, r25
 b50:	0d c0       	rjmp	.+26     	; 0xb6c <__fp_mintl+0x32>
 b52:	90 51       	subi	r25, 0x10	; 16
 b54:	86 2b       	or	r24, r22
 b56:	70 e0       	ldi	r23, 0x00	; 0
 b58:	60 e0       	ldi	r22, 0x00	; 0
 b5a:	2a f0       	brmi	.+10     	; 0xb66 <__fp_mintl+0x2c>
 b5c:	9a 95       	dec	r25
 b5e:	66 0f       	add	r22, r22
 b60:	77 1f       	adc	r23, r23
 b62:	88 1f       	adc	r24, r24
 b64:	da f7       	brpl	.-10     	; 0xb5c <__fp_mintl+0x22>
 b66:	88 0f       	add	r24, r24
 b68:	96 95       	lsr	r25
 b6a:	87 95       	ror	r24
 b6c:	97 f9       	bld	r25, 7
 b6e:	08 95       	ret

00000b70 <__fp_mpack>:
 b70:	9f 3f       	cpi	r25, 0xFF	; 255
 b72:	31 f0       	breq	.+12     	; 0xb80 <__fp_mpack_finite+0xc>

00000b74 <__fp_mpack_finite>:
 b74:	91 50       	subi	r25, 0x01	; 1
 b76:	20 f4       	brcc	.+8      	; 0xb80 <__fp_mpack_finite+0xc>
 b78:	87 95       	ror	r24
 b7a:	77 95       	ror	r23
 b7c:	67 95       	ror	r22
 b7e:	b7 95       	ror	r27
 b80:	88 0f       	add	r24, r24
 b82:	91 1d       	adc	r25, r1
 b84:	96 95       	lsr	r25
 b86:	87 95       	ror	r24
 b88:	97 f9       	bld	r25, 7
 b8a:	08 95       	ret

00000b8c <__fp_powser>:
 b8c:	df 93       	push	r29
 b8e:	cf 93       	push	r28
 b90:	1f 93       	push	r17
 b92:	0f 93       	push	r16
 b94:	ff 92       	push	r15
 b96:	ef 92       	push	r14
 b98:	df 92       	push	r13
 b9a:	7b 01       	movw	r14, r22
 b9c:	8c 01       	movw	r16, r24
 b9e:	68 94       	set
 ba0:	05 c0       	rjmp	.+10     	; 0xbac <__fp_powser+0x20>
 ba2:	da 2e       	mov	r13, r26
 ba4:	ef 01       	movw	r28, r30
 ba6:	d5 de       	rcall	.-598    	; 0x952 <__mulsf3x>
 ba8:	fe 01       	movw	r30, r28
 baa:	e8 94       	clt
 bac:	a5 91       	lpm	r26, Z+
 bae:	25 91       	lpm	r18, Z+
 bb0:	35 91       	lpm	r19, Z+
 bb2:	45 91       	lpm	r20, Z+
 bb4:	55 91       	lpm	r21, Z+
 bb6:	ae f3       	brts	.-22     	; 0xba2 <__fp_powser+0x16>
 bb8:	ef 01       	movw	r28, r30
 bba:	d4 dc       	rcall	.-1624   	; 0x564 <__addsf3x>
 bbc:	fe 01       	movw	r30, r28
 bbe:	97 01       	movw	r18, r14
 bc0:	a8 01       	movw	r20, r16
 bc2:	da 94       	dec	r13
 bc4:	79 f7       	brne	.-34     	; 0xba4 <__fp_powser+0x18>
 bc6:	df 90       	pop	r13
 bc8:	ef 90       	pop	r14
 bca:	ff 90       	pop	r15
 bcc:	0f 91       	pop	r16
 bce:	1f 91       	pop	r17
 bd0:	cf 91       	pop	r28
 bd2:	df 91       	pop	r29
 bd4:	08 95       	ret

00000bd6 <inverse>:
 bd6:	9b 01       	movw	r18, r22
 bd8:	ac 01       	movw	r20, r24
 bda:	60 e0       	ldi	r22, 0x00	; 0
 bdc:	70 e0       	ldi	r23, 0x00	; 0
 bde:	80 e8       	ldi	r24, 0x80	; 128
 be0:	9f e3       	ldi	r25, 0x3F	; 63
 be2:	17 cd       	rjmp	.-1490   	; 0x612 <__divsf3>
 be4:	10 ce       	rjmp	.-992    	; 0x806 <__fp_inf>
 be6:	c4 cf       	rjmp	.-120    	; 0xb70 <__fp_mpack>

00000be8 <ldexp>:
 be8:	3e de       	rcall	.-900    	; 0x866 <__fp_splitA>
 bea:	e8 f3       	brcs	.-6      	; 0xbe6 <inverse+0x10>
 bec:	99 23       	and	r25, r25
 bee:	d9 f3       	breq	.-10     	; 0xbe6 <inverse+0x10>
 bf0:	94 0f       	add	r25, r20
 bf2:	51 1d       	adc	r21, r1
 bf4:	bb f3       	brvs	.-18     	; 0xbe4 <inverse+0xe>
 bf6:	91 50       	subi	r25, 0x01	; 1
 bf8:	50 40       	sbci	r21, 0x00	; 0
 bfa:	94 f0       	brlt	.+36     	; 0xc20 <ldexp+0x38>
 bfc:	59 f0       	breq	.+22     	; 0xc14 <ldexp+0x2c>
 bfe:	88 23       	and	r24, r24
 c00:	32 f0       	brmi	.+12     	; 0xc0e <ldexp+0x26>
 c02:	66 0f       	add	r22, r22
 c04:	77 1f       	adc	r23, r23
 c06:	88 1f       	adc	r24, r24
 c08:	91 50       	subi	r25, 0x01	; 1
 c0a:	50 40       	sbci	r21, 0x00	; 0
 c0c:	c1 f7       	brne	.-16     	; 0xbfe <ldexp+0x16>
 c0e:	9e 3f       	cpi	r25, 0xFE	; 254
 c10:	51 05       	cpc	r21, r1
 c12:	44 f7       	brge	.-48     	; 0xbe4 <inverse+0xe>
 c14:	88 0f       	add	r24, r24
 c16:	91 1d       	adc	r25, r1
 c18:	96 95       	lsr	r25
 c1a:	87 95       	ror	r24
 c1c:	97 f9       	bld	r25, 7
 c1e:	08 95       	ret
 c20:	5f 3f       	cpi	r21, 0xFF	; 255
 c22:	ac f0       	brlt	.+42     	; 0xc4e <ldexp+0x66>
 c24:	98 3e       	cpi	r25, 0xE8	; 232
 c26:	9c f0       	brlt	.+38     	; 0xc4e <ldexp+0x66>
 c28:	bb 27       	eor	r27, r27
 c2a:	86 95       	lsr	r24
 c2c:	77 95       	ror	r23
 c2e:	67 95       	ror	r22
 c30:	b7 95       	ror	r27
 c32:	08 f4       	brcc	.+2      	; 0xc36 <ldexp+0x4e>
 c34:	b1 60       	ori	r27, 0x01	; 1
 c36:	93 95       	inc	r25
 c38:	c1 f7       	brne	.-16     	; 0xc2a <ldexp+0x42>
 c3a:	bb 0f       	add	r27, r27
 c3c:	58 f7       	brcc	.-42     	; 0xc14 <ldexp+0x2c>
 c3e:	11 f4       	brne	.+4      	; 0xc44 <ldexp+0x5c>
 c40:	60 ff       	sbrs	r22, 0
 c42:	e8 cf       	rjmp	.-48     	; 0xc14 <ldexp+0x2c>
 c44:	6f 5f       	subi	r22, 0xFF	; 255
 c46:	7f 4f       	sbci	r23, 0xFF	; 255
 c48:	8f 4f       	sbci	r24, 0xFF	; 255
 c4a:	9f 4f       	sbci	r25, 0xFF	; 255
 c4c:	e3 cf       	rjmp	.-58     	; 0xc14 <ldexp+0x2c>
 c4e:	26 ce       	rjmp	.-948    	; 0x89c <__fp_szero>

00000c50 <modf>:
 c50:	fa 01       	movw	r30, r20
 c52:	dc 01       	movw	r26, r24
 c54:	aa 0f       	add	r26, r26
 c56:	bb 1f       	adc	r27, r27
 c58:	9b 01       	movw	r18, r22
 c5a:	ac 01       	movw	r20, r24
 c5c:	bf 57       	subi	r27, 0x7F	; 127
 c5e:	28 f4       	brcc	.+10     	; 0xc6a <modf+0x1a>
 c60:	22 27       	eor	r18, r18
 c62:	33 27       	eor	r19, r19
 c64:	44 27       	eor	r20, r20
 c66:	50 78       	andi	r21, 0x80	; 128
 c68:	1f c0       	rjmp	.+62     	; 0xca8 <modf+0x58>
 c6a:	b7 51       	subi	r27, 0x17	; 23
 c6c:	88 f4       	brcc	.+34     	; 0xc90 <modf+0x40>
 c6e:	ab 2f       	mov	r26, r27
 c70:	00 24       	eor	r0, r0
 c72:	46 95       	lsr	r20
 c74:	37 95       	ror	r19
 c76:	27 95       	ror	r18
 c78:	01 1c       	adc	r0, r1
 c7a:	a3 95       	inc	r26
 c7c:	d2 f3       	brmi	.-12     	; 0xc72 <modf+0x22>
 c7e:	00 20       	and	r0, r0
 c80:	69 f0       	breq	.+26     	; 0xc9c <modf+0x4c>
 c82:	22 0f       	add	r18, r18
 c84:	33 1f       	adc	r19, r19
 c86:	44 1f       	adc	r20, r20
 c88:	b3 95       	inc	r27
 c8a:	da f3       	brmi	.-10     	; 0xc82 <modf+0x32>
 c8c:	0d d0       	rcall	.+26     	; 0xca8 <modf+0x58>
 c8e:	58 cc       	rjmp	.-1872   	; 0x540 <__subsf3>
 c90:	61 30       	cpi	r22, 0x01	; 1
 c92:	71 05       	cpc	r23, r1
 c94:	a0 e8       	ldi	r26, 0x80	; 128
 c96:	8a 07       	cpc	r24, r26
 c98:	b9 46       	sbci	r27, 0x69	; 105
 c9a:	30 f4       	brcc	.+12     	; 0xca8 <modf+0x58>
 c9c:	9b 01       	movw	r18, r22
 c9e:	ac 01       	movw	r20, r24
 ca0:	66 27       	eor	r22, r22
 ca2:	77 27       	eor	r23, r23
 ca4:	88 27       	eor	r24, r24
 ca6:	90 78       	andi	r25, 0x80	; 128
 ca8:	30 96       	adiw	r30, 0x00	; 0
 caa:	21 f0       	breq	.+8      	; 0xcb4 <modf+0x64>
 cac:	20 83       	st	Z, r18
 cae:	31 83       	std	Z+1, r19	; 0x01
 cb0:	42 83       	std	Z+2, r20	; 0x02
 cb2:	53 83       	std	Z+3, r21	; 0x03
 cb4:	08 95       	ret

00000cb6 <__udivmodqi4>:
 cb6:	99 1b       	sub	r25, r25
 cb8:	79 e0       	ldi	r23, 0x09	; 9
 cba:	04 c0       	rjmp	.+8      	; 0xcc4 <__udivmodqi4_ep>

00000cbc <__udivmodqi4_loop>:
 cbc:	99 1f       	adc	r25, r25
 cbe:	96 17       	cp	r25, r22
 cc0:	08 f0       	brcs	.+2      	; 0xcc4 <__udivmodqi4_ep>
 cc2:	96 1b       	sub	r25, r22

00000cc4 <__udivmodqi4_ep>:
 cc4:	88 1f       	adc	r24, r24
 cc6:	7a 95       	dec	r23
 cc8:	c9 f7       	brne	.-14     	; 0xcbc <__udivmodqi4_loop>
 cca:	80 95       	com	r24
 ccc:	08 95       	ret

00000cce <__divmodhi4>:
 cce:	97 fb       	bst	r25, 7
 cd0:	07 2e       	mov	r0, r23
 cd2:	16 f4       	brtc	.+4      	; 0xcd8 <__divmodhi4+0xa>
 cd4:	00 94       	com	r0
 cd6:	06 d0       	rcall	.+12     	; 0xce4 <__divmodhi4_neg1>
 cd8:	77 fd       	sbrc	r23, 7
 cda:	08 d0       	rcall	.+16     	; 0xcec <__divmodhi4_neg2>
 cdc:	0b d0       	rcall	.+22     	; 0xcf4 <__udivmodhi4>
 cde:	07 fc       	sbrc	r0, 7
 ce0:	05 d0       	rcall	.+10     	; 0xcec <__divmodhi4_neg2>
 ce2:	3e f4       	brtc	.+14     	; 0xcf2 <__divmodhi4_exit>

00000ce4 <__divmodhi4_neg1>:
 ce4:	90 95       	com	r25
 ce6:	81 95       	neg	r24
 ce8:	9f 4f       	sbci	r25, 0xFF	; 255
 cea:	08 95       	ret

00000cec <__divmodhi4_neg2>:
 cec:	70 95       	com	r23
 cee:	61 95       	neg	r22
 cf0:	7f 4f       	sbci	r23, 0xFF	; 255

00000cf2 <__divmodhi4_exit>:
 cf2:	08 95       	ret

00000cf4 <__udivmodhi4>:
 cf4:	aa 1b       	sub	r26, r26
 cf6:	bb 1b       	sub	r27, r27
 cf8:	51 e1       	ldi	r21, 0x11	; 17
 cfa:	07 c0       	rjmp	.+14     	; 0xd0a <__udivmodhi4_ep>

00000cfc <__udivmodhi4_loop>:
 cfc:	aa 1f       	adc	r26, r26
 cfe:	bb 1f       	adc	r27, r27
 d00:	a6 17       	cp	r26, r22
 d02:	b7 07       	cpc	r27, r23
 d04:	10 f0       	brcs	.+4      	; 0xd0a <__udivmodhi4_ep>
 d06:	a6 1b       	sub	r26, r22
 d08:	b7 0b       	sbc	r27, r23

00000d0a <__udivmodhi4_ep>:
 d0a:	88 1f       	adc	r24, r24
 d0c:	99 1f       	adc	r25, r25
 d0e:	5a 95       	dec	r21
 d10:	a9 f7       	brne	.-22     	; 0xcfc <__udivmodhi4_loop>
 d12:	80 95       	com	r24
 d14:	90 95       	com	r25
 d16:	bc 01       	movw	r22, r24
 d18:	cd 01       	movw	r24, r26
 d1a:	08 95       	ret

00000d1c <_exit>:
 d1c:	f8 94       	cli

00000d1e <__stop_program>:
 d1e:	ff cf       	rjmp	.-2      	; 0xd1e <__stop_program>
